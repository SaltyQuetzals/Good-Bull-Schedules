{"version":3,"sources":["components/AddCourseDialog.jsx","utils.ts","components/AddScheduleDialog.jsx","redux/types.ts","components/SectionListItem.tsx","redux/actions.ts","components/CourseListItem.tsx","components/CourseList.tsx","components/ScheduleSelect.tsx","components/MeetingBlock.tsx","components/Week.tsx","App.tsx","serviceWorker.js","redux/reducers.ts","index.tsx"],"names":["AddCourseDialog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","results","handleChange","bind","assertThisInitialized","dialogClosing","search","debounce","resultSelected","selectedIndex","_this$state$results$s","dept","course_num","body","course_id","concat","headers","Content-Type","X-CSRFToken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","fetch","currScheduleId","method","mode","JSON","stringify","then","response","json","console","log","that","setState","e","currentTarget","closeCourseDialog","react_default","a","createElement","react_dialog_dist_default","open","onClose","react_dialog_dist","className","react_text_field_dist_default","helperText","react_text_field_dist","trailingIcon","react_material_icon_dist_default","role","icon","onChange","react_list_dist_default","handleSelect","map","_ref","react_list_dist","key","primaryText","action","isDefault","Component","connect","currScheduleName","schedule","schedules","get","id","AddScheduleDialog","ADD_SECTION","REMOVE_SECTION","ADD_COURSE","REMOVE_COURSE","ADD_SCHEDULE","REMOVE_SCHEDULE","SELECT_SCHEDULE","LOAD_SCHEDULES","LETTER_MAP","A","B","C","D","F","Q","GradeDistribution","historical_performance","divs","sum","letter","val","push","style","backgroundColor","width","toFixed","display","border","boxSizing","height","marginLeft","SectionListItem","checkboxClickHandler","isChecked","selectedCrns","has","section","crn","removeSection","addSection","_this$props$section","section_num","instructor","react_checkbox_dist","initRipple","checked","secondaryText","graphic","SectionListItem_GradeDistribution","React","Set","dispatch","sectionCrn","type","payload","CourseListItem","indeterminate","handleDeleteClick","removeCourse","triggerElem","meta","react_icon_button_dist_default","onClick","Collapsible_default","trigger","transitionTime","twoLine","sections","components_SectionListItem","CourseList","courseListItems","courses","_this$props$courses$_","sectionProps","components_CourseListItem","avatarList","objectSpread","ScheduleSelect","handleSelectionChange","scheduleNames","selectSchedule","evt","target","react_select_dist_default","options","MeetingBlock","position","top","start","duration","borderRadius","background","alignItems","justifyContent","react_typography_dist","displayText","stringifyTime","minutesSinceMidnight","minutes","hours","Math","round","floor","date","Date","setHours","setMinutes","setSeconds","_time$split","toTimeString","_time$split2","slicedToArray","hh","mm","forEach","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","undefined","_step4","_iterator4","Symbol","iterator","next","done","size","err","return","meetingsMap","M","T","W","R","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","meetings","meeting","start_time","end_time","meeting_days","START_TIME","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","components_MeetingBlock","random","Number","MAX_SAFE_INTEGER","days","_i","_weekdays","_ref3","_ref2","day","abbrev","rows","END_TIME","color","textAlign","padding","paddingLeft","borderBottom","verticalAlign","App","addCourseDialogIsOpen","addScheduleDialogIsOpen","handleClick","_this2","loadSchedules","catch","anySchedulesCreated","dist_default","dist","components_ScheduleSelect","Array","from","keys","components_CourseList","components_Week","react_fab_dist_default","AddScheduleDialog_AddScheduleDialog","components_AddCourseDialog","Boolean","window","location","hostname","match","initialState","Map","timeStringToMinSinceMidnight","timeString","_timeString$split$map","chunk","parseInt","_timeString$split$map2","store","createStore","arguments","newState","add","delete","_action$payload","set","Error","scheduleName","courseName","course","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.564c2448.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Dialog, {\n  DialogTitle,\n  DialogContent,\n  DialogFooter,\n  DialogButton\n} from \"@material/react-dialog\";\nimport TextField, { HelperText, Input } from \"@material/react-text-field\";\nimport List, { ListItem, ListItemText } from \"@material/react-list\";\nimport MaterialIcon from \"@material/react-material-icon\";\nimport { debounce } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { getCookie } from \"../utils\";\n\nclass AddCourseDialog extends Component {\n\n  state = { value: \"\", results: [] };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.dialogClosing = this.dialogClosing.bind(this);\n    this.search = debounce(this.search, 300).bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n  }\n\n  resultSelected(selectedIndex) {\n    const { dept, course_num } = this.state.results[selectedIndex];\n    const body = {\n      course_id: `${dept}-${course_num}`\n    }\n    const csrftoken = getCookie(\"csrftoken\");\n    const headers = {\n      'Content-Type': 'application/json',\n      \"X-CSRFToken\": csrftoken\n    }\n    fetch(`/api/schedules/${this.props.currScheduleId}/courses`, { method: \"PATCH\", mode: \"same-origin\", headers, body: JSON.stringify(body) })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n      })\n    this.dialogClosing();\n  }\n\n  search() {\n    const that = this;\n    fetch(`/api/data/search?q=${this.state.value}`).then((response) => response.json()).then((json) => {\n      that.setState({ results: json });\n    })\n    // this.setState({ results: [{ \"name\": \"Qualitative Methodologies in Educational Research\", \"dept\": \"EPSY\", \"course_num\": \"603\", \"description\": \"Survey of qualitative research methodologies commonly used in educational research; purposes, epistemologies, data collection and analyses that distinguish different qualitative approaches to educational research; ethical and procedural challenges of collecting qualitative data in educational settings.\" }, { \"name\": \"Qualitative Rsch Mthds\", \"dept\": \"EHRD\", \"course_num\": \"655\", \"description\": \"Introduction to qualitative research methods; theoretical underpinnings; the research paradigm and applied experience with the methodology.\" }, { \"name\": \"Qualitative Methods\", \"dept\": \"SOCI\", \"course_num\": \"229\", \"description\": \"Methodologies in social research with emphasis on qualitative dimensions of inquiry; topics include in-depth interviewing, observation, unobtrusive measures, analysis of documents, fieldwork issues, ethics, note-taking, preliminary data analysis, and an overview of writing research reports based on qualitative research.\" }, { \"name\": \"Qual Res Design And Data Coll\", \"dept\": \"EPSY\", \"course_num\": \"633\", \"description\": \"Introduction to qualitative designs used to answer educational, psychological, or social research questions; historical foundations, epistemologies and essential elements of prevalent qualitative research designs; methods of collecting qualitative data including interviews, naturalistic observation, participant-observation, and stimulated recall procedures.\" }, { \"name\": \"Qual Rsrch Mthds In C&I\", \"dept\": \"EDCI\", \"course_num\": \"605\", \"description\": \"Theoretical and methodological issues related to qualitative inquiry; discussion of qualitative paradigm's ontological, epistemological, and axiological stances; review and implementation of commonly used qualitative research methods and approaches in curriculum and instruction, including narrative, phenomenology, ethnography, grounded theory, and case study approaches.\" }, { \"name\": \"Qualitative Analysis\", \"dept\": \"CHEM\", \"course_num\": \"114\", \"description\": null }, { \"name\": \"Qualitative Method\", \"dept\": \"SOCI\", \"course_num\": \"624\", \"description\": \"Exposure to and critical assessment of qualitative approaches to data gathering in social science; topics include naturalistic observation, field research skills, unobtrusive measures and grounded theory construction.\" }, { \"name\": \"Data Analysis In Geog\", \"dept\": \"GEOG\", \"course_num\": \"312\", \"description\": \"Foundation for collection and analysis of quantitative and qualitative geographic data; emphasis on hands-on, practical experience with commonly used analysis software and qualitative methods including interviewing and archival research; problems commonly encountered in dealing with data.\" }, { \"name\": \"Life History Research\", \"dept\": \"EHRD\", \"course_num\": \"657\", \"description\": \"Examines qualitative research that focuses on life experience both in its entirety (life history; biography and autobiography) and with specificity around a particular event (autoethnography); explores the nature of these types of qualitative research and discussing the methodological issues inherent in each mode.\" }, { \"name\": \"Meth Of Soc Research\", \"dept\": \"SOCI\", \"course_num\": \"220\", \"description\": \"Relationships between sociological theory, research, qualitative evaluation of data; construction and use of analytical procedures and research techniques, and participant observation.\" }] })\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.currentTarget.value });\n    this.search();\n  }\n\n  dialogClosing() {\n    this.setState({ results: [], value: \"\" });\n    this.props.closeCourseDialog();\n  }\n  render() {\n    return (\n      <Dialog open={this.props.open} onClose={this.dialogClosing}>\n        <DialogTitle>Add Course</DialogTitle>\n        <DialogContent className=\"course-dialog\">\n          <TextField\n            helperText={<HelperText>Search</HelperText>} trailingIcon={<MaterialIcon role=\"button\" icon=\"search\" />}>\n            <Input value={this.state.value} onChange={this.handleChange}></Input>\n          </TextField>\n          <List className=\"course-results-list\" handleSelect={this.resultSelected}>\n            {this.state.results.map(({ name, dept, course_num }, i) =>\n              <ListItem key={i}>\n                <ListItemText primaryText={`${dept}-${course_num}: ${name}`} />\n              </ListItem>)}\n          </List>\n        </DialogContent>\n        <DialogFooter>\n          <DialogButton action=\"dismiss\">Dismiss</DialogButton>\n          <DialogButton action=\"accept\" isDefault>\n            Accept\n          </DialogButton>\n        </DialogFooter>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      return {\n        currScheduleId: schedule.id\n      }\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(AddCourseDialog);","export function getCookie(name: string) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}","import React, { Component } from \"react\";\nimport Dialog, {\n  DialogTitle,\n  DialogContent,\n  DialogFooter,\n  DialogButton\n} from \"@material/react-dialog\";\n\nexport default class AddScheduleDialog extends Component {\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle>Add Schedule</DialogTitle>\n        <DialogContent />\n        <DialogFooter>\n          <DialogButton action=\"dismiss\">Dismiss</DialogButton>\n          <DialogButton action=\"accept\" isDefault>\n            Accept\n          </DialogButton>\n        </DialogFooter>\n      </Dialog>\n    );\n  }\n}\n","export const ADD_SECTION = \"ADD_SECTION\";\nexport const REMOVE_SECTION = \"REMOVE_SECTION\";\nexport const ADD_COURSE = \"ADD_COURSE\";\nexport const REMOVE_COURSE = \"REMOVE_COURSE\";\nexport const ADD_SCHEDULE = \"ADD_SCHEDULE\";\nexport const REMOVE_SCHEDULE = \"REMOVE_SCHEDULE\";\nexport const SELECT_SCHEDULE = \"SELECT_SCHEDULE\";\nexport const LOAD_SCHEDULES = \"LOAD_SCHEDULES\";\n\nexport interface Meeting {\n  location: string | null;\n  meeting_days: string | null;\n  start_time: number;\n  end_time: number;\n  meeting_type: string;\n}\n\nexport interface Section {\n  dept: string;\n  course_num: string;\n  section_num: string;\n  name: string;\n  term_code: number;\n  crn: number;\n  meetings: Array<Meeting>;\n  historical_performance: {\n    A: number | null,\n    B: number | null,\n    C: number | null,\n    D: number | null,\n    F: number | null,\n    I: number | null,\n    S: number | null,\n    U: number | null,\n    Q: number | null,\n    X: number | null,\n  }\n  min_credits: number | null;\n  max_credits: number | null;\n  instructor: string | null;\n}\n\nexport interface Course {\n  dept: string;\n  course_num: string;\n  name: string;\n  prerequisites: string | null;\n  corequisites: string | null;\n  min_credits: number | null;\n  max_credits: number | null;\n  description: string | null;\n  distribution_of_hours: string | null;\n  sections: Array<Section>;\n}\n\nexport interface Schedule {\n  name: string;\n  term_code: number;\n  courses: { [key: string]: Course };\n  selectedCrns: Set<number>;\n  id: number;\n}\n\nexport interface AddSectionAction {\n  type: typeof ADD_SECTION;\n  payload: number;\n}\n\nexport interface RemoveSectionAction {\n  type: typeof REMOVE_SECTION;\n  payload: number;\n}\n\nexport interface AddCourseAction {\n  type: typeof ADD_COURSE;\n  payload: Course;\n}\n\nexport interface RemoveCourseAction {\n  type: typeof REMOVE_COURSE;\n  payload: { dept: string, course_num: string };\n}\n\nexport interface AddScheduleAction {\n  type: typeof ADD_SCHEDULE;\n  payload: {\n    name: string; // Schedule name\n    term_code: number;\n  };\n}\n\nexport interface RemoveScheduleAction {\n  type: typeof REMOVE_SCHEDULE;\n  payload: string; // Schedule name\n}\n\nexport interface SelectScheduleAction {\n  type: typeof SELECT_SCHEDULE;\n  payload: string;\n}\n\nexport interface LoadSchedulesAction {\n  type: typeof LOAD_SCHEDULES;\n  payload: Array<any>;\n}\n\nexport interface SchedulesState {\n  schedules: Map<string, Schedule>;\n  currScheduleName: string | undefined;\n}\n\nexport type SectionActionTypes = AddSectionAction | RemoveSectionAction;\nexport type CourseActionTypes = AddCourseAction | RemoveCourseAction;\nexport type ScheduleActionTypes =\n  | AddScheduleAction\n  | RemoveScheduleAction\n  | SelectScheduleAction\n  | LoadSchedulesAction;\n\nexport type ActionTypes =\n  | SectionActionTypes\n  | CourseActionTypes\n  | ScheduleActionTypes;\n","import React from \"react\";\nimport { ListItem, ListItemText, ListItemGraphic } from \"@material/react-list\";\nimport { Section, Schedule, SchedulesState } from \"../redux/types\";\nimport { Checkbox } from \"@material/react-checkbox\";\nimport { addSection, removeSection } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\n\nexport interface SectionListItemProps {\n  section: Section;\n  addSection?: any;\n  removeSection?: any;\n  selectedCrns?: Set<number>;\n}\n\ninterface GradeDistributionProps {\n  historical_performance: { [key: string]: (number | null) };\n}\n\nconst LETTER_MAP: { [key: string]: string } = {\n  \"A\": \"#00BCD4\",\n  \"B\": \"#A5D6A7\",\n  \"C\": \"#FFEE58\",\n  \"D\": \"#E57373\",\n  \"F\": \"#90A4AE\",\n  \"Q\": \"#D1C4E9\",\n}\n\nconst GradeDistribution: React.FunctionComponent<\n  GradeDistributionProps\n> = props => {\n  const { historical_performance } = props;\n  if (historical_performance['A'] === null) {\n    return <div />;\n  } else {\n    const divs = [];\n    let sum = 0;\n    for (const letter in LETTER_MAP) {\n      const val = historical_performance[letter];\n      sum += val ? val : 0;\n    }\n    for (const letter in LETTER_MAP) {\n      const val = historical_performance[letter];\n      if (val) {\n        divs.push(<div key={letter} style={{\n          backgroundColor: LETTER_MAP[letter],\n          width: `${((val / sum) * 100 - 0.1).toFixed(2)}%`,\n          display: \"inline-block\",\n          border: \"1px solid white\",\n          boxSizing: \"border-box\",\n          height: 20\n        }}></div>)\n      }\n    }\n    return <div style={{ width: '40%', marginLeft: 'auto' }}>{divs}</div>;\n  }\n};\n\nclass SectionListItem extends React.Component<\n  SectionListItemProps\n  > {\n\n  constructor(props: SectionListItemProps) {\n    super(props);\n    this.checkboxClickHandler = this.checkboxClickHandler.bind(this);\n    this.isChecked = this.isChecked.bind(this);\n    this.checkboxClickHandler = this.checkboxClickHandler.bind(this);\n  }\n\n  isChecked(): boolean {\n    if (this.props.selectedCrns) {\n      return this.props.selectedCrns.has(this.props.section.crn);\n    }\n    return false;\n  }\n\n  checkboxClickHandler() {\n    if (this.isChecked()) {\n      this.props.removeSection(this.props.section.crn);\n    } else {\n      this.props.addSection(this.props.section.crn);\n    }\n  }\n  render() {\n    const { section_num, instructor, historical_performance } = this.props.section;\n    return (\n      <ListItem>\n        <Checkbox initRipple={() => { }} checked={this.isChecked()} onChange={this.checkboxClickHandler} />\n        <ListItemText primaryText={section_num} secondaryText={instructor} />\n        <ListItemGraphic graphic={<GradeDistribution historical_performance={historical_performance} />} />\n      </ListItem>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addSection: (sectionCrn: number) => dispatch(addSection(sectionCrn)),\n    removeSection: (sectionCrn: number) => dispatch(removeSection(sectionCrn))\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => {\n  let selectedCrns = new Set<number>();\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      selectedCrns = schedule.selectedCrns;\n    }\n  }\n  return { selectedCrns };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionListItem);","import {\n  SectionActionTypes,\n  ADD_SECTION,\n  REMOVE_SECTION,\n  Course,\n  CourseActionTypes,\n  ADD_COURSE,\n  REMOVE_COURSE,\n  ScheduleActionTypes,\n  Schedule,\n  ADD_SCHEDULE,\n  REMOVE_SCHEDULE,\n  SELECT_SCHEDULE,\n  LOAD_SCHEDULES\n} from \"./types\";\n\nexport function addSection(sectionCrn: number): SectionActionTypes {\n  return { type: ADD_SECTION, payload: sectionCrn };\n}\n\nexport function removeSection(sectionCrn: number): SectionActionTypes {\n  return { type: REMOVE_SECTION, payload: sectionCrn };\n}\n\nexport function addCourse(course: Course): CourseActionTypes {\n  return { type: ADD_COURSE, payload: course };\n}\n\nexport function removeCourse(dept: string, course_num: string): CourseActionTypes {\n  return { type: REMOVE_COURSE, payload: { dept, course_num } };\n}\n\nexport function addSchedule(\n  name: string,\n  term_code: number\n): ScheduleActionTypes {\n  return { type: ADD_SCHEDULE, payload: { name, term_code } };\n}\n\nexport function removeSchedule(name: string): ScheduleActionTypes {\n  return { type: REMOVE_SCHEDULE, payload: name };\n}\n\nexport function selectSchedule(name: string): ScheduleActionTypes {\n  return { type: SELECT_SCHEDULE, payload: name };\n}\n\nexport function loadSchedules(schedules: Array<any>): ScheduleActionTypes {\n  return { type: LOAD_SCHEDULES, payload: schedules };\n}\n","import React from \"react\";\nimport List, {\n  ListItem,\n  ListItemText,\n  ListItemMeta\n} from \"@material/react-list\";\nimport IconButton from \"@material/react-icon-button\";\nimport MaterialIcon from \"@material/react-material-icon\";\n\nimport Collapsible from \"react-collapsible\";\nimport ConnectedSectionListItem, {SectionListItemProps} from \"./SectionListItem\";\nimport { removeCourse } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\n\ninterface CourseListItemProps {\n  dept: string;\n  course_num: string;\n  name: string;\n  sections: Array<SectionListItemProps>;\n  removeCourse: any;\n}\n\nclass CourseListItem extends React.Component<\n  CourseListItemProps\n  > {\n  state = { checked: false, indeterminate: false };\n\n  constructor(props: CourseListItemProps) {\n    super(props);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  handleDeleteClick() {\n    this.props.removeCourse(this.props.dept, this.props.course_num);\n  }\n  render() {\n    const triggerElem = (\n      <ListItem className=\"course-list-item\">\n        <ListItemText\n          primaryText={`${this.props.dept}-${this.props.course_num}`}\n          secondaryText={this.props.name}\n        />\n        <ListItemMeta\n          meta={\n            <IconButton onClick={this.handleDeleteClick}>\n              <MaterialIcon icon=\"delete\" />\n            </IconButton>\n          }\n        />\n      </ListItem>\n    );\n\n    return (\n      <Collapsible trigger={triggerElem} transitionTime={250}>\n        <List twoLine className=\"course-sections\">\n          {this.props.sections.map(({ section }, i) => {\n            return <ConnectedSectionListItem key={i} section={section} />;\n          })}\n        </List>\n      </Collapsible>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    removeCourse: (dept: string, course_num: string) => dispatch(removeCourse(dept, course_num))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CourseListItem);","import React from \"react\";\nimport List from \"@material/react-list\";\n\nimport CourseListItem from \"./CourseListItem\";\nimport { SchedulesState, Course, Section } from \"../redux/types\";\nimport { connect } from \"react-redux\";\n\ninterface CourseListProps {\n  courses: { [key: string]: Course }\n}\nclass CourseList extends React.Component<CourseListProps> {\n  render() {\n    let courseListItems: any[] = [];\n    for (const key in this.props.courses) {\n      const { dept, name, course_num, sections } = this.props.courses[key];\n      const sectionProps = sections.map((section) => ({ section }));\n      courseListItems.push(\n        <CourseListItem\n          key={`${dept}-${course_num}`}\n          name={name}\n          dept={dept}\n          course_num={course_num}\n          sections={sectionProps}\n        />\n      )\n    }\n    return (\n      <List twoLine avatarList>\n        {courseListItems}\n      </List>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => {\n  let courses: { [key: string]: Course } = {};\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      courses = {...schedule.courses};\n    }\n  }\n  return { courses };\n}\n\nexport default connect(mapStateToProps)(CourseList);","import React, { ChangeEvent, FormEvent } from \"react\";\nimport Select from \"@material/react-select\";\nimport { selectSchedule } from \"../redux/actions\";\nimport { SchedulesState } from \"../redux/types\";\nimport { connect } from \"react-redux\";\n\n\ninterface ScheduleSelectProps {\n  scheduleNames: string[];\n  currScheduleName: string | undefined;\n  selectSchedule: any;\n}\n\nclass ScheduleSelect extends React.Component<ScheduleSelectProps> {\n  constructor(props: ScheduleSelectProps) {\n    super(props);\n    this.handleSelectionChange = this.handleSelectionChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.currScheduleName) {\n      // HACK: Set choice to first schedule, probably bad UX, but can't really help it right now.\n      if (this.props.scheduleNames.length > 0) {\n        this.props.selectSchedule(this.props.scheduleNames[0]);\n      }\n    }\n  }\n\n  handleSelectionChange(evt: any) {\n    if (evt.target) {\n      this.props.selectSchedule(evt.target.value);\n    } else {\n      console.log(\"Event target is undefined?\");\n    }\n  }\n\n  render() {\n    if (this.props.scheduleNames.length === 0) {\n      return null;\n    } else {\n      return (\n        <Select\n          className=\"schedule-select\"\n          onChange={this.handleSelectionChange}\n          options={this.props.scheduleNames}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => ({\n  currScheduleName: state.currScheduleName\n});\n\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    selectSchedule: (name: string) => dispatch(selectSchedule(name))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleSelect);\n","import React from \"react\";\nimport { Body1 } from \"@material/react-typography\";\n\ninterface MeetingBlockProps {\n  start: number;\n  duration: number;\n  displayText: string;\n}\n\nconst MeetingBlock: React.SFC<MeetingBlockProps> = (\n  props: MeetingBlockProps\n) => (\n    <div\n      style={{\n        position: \"absolute\",\n        top: props.start * 100 + \"%\",\n        height: props.duration * 100 + \"%\",\n        width: \"100%\",\n        borderRadius: 3,\n        background: \"red\",\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Body1>{props.displayText}</Body1>\n    </div >\n  );\n\nexport default MeetingBlock;\n","import React from \"react\";\nimport { Section, SchedulesState } from \"../redux/types\";\nimport MeetingBlock from \"./MeetingBlock\";\nimport { connect } from \"react-redux\";\nimport { Body1 } from \"@material/react-typography\";\n\ninterface WeekProps {\n  sections: Array<Section>;\n}\n\nconst stringifyTime = (minutesSinceMidnight: number): string => {\n  let minutes = minutesSinceMidnight % 1;\n  let hours = minutesSinceMidnight - minutes;\n  minutes *= 60;\n  minutes = Math.round(minutes);\n\n  if (hours > 24) {\n    var day = Math.floor(hours / 24);\n    hours %= 24;\n  }\n\n  let date = new Date();\n  date.setHours(hours);\n  date.setMinutes(minutes);\n  date.setSeconds(0);\n\n  const time = date.toTimeString().split(\" \")[0];\n  const [hh, mm, ss] = time.split(\":\")\n\n  return `${hh}:${mm}`;\n};\n\nconst Week: React.SFC<WeekProps> = (props: WeekProps) => {\n  const weekdays = [\n    [\"Monday\", \"M\"],\n    [\"Tuesday\", \"T\"],\n    [\"Wednesday\", \"W\"],\n    [\"Thursday\", \"R\"],\n    [\"Friday\", \"F\"]\n  ];\n  const meetingsMap: { [key: string]: Array<React.ReactElement> } = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: []\n  };\n  const END_TIME = 21; // 9pm\n  const START_TIME = 7; // 7am\n  const dayLength = END_TIME - START_TIME + 1;\n\n  for (const section of props.sections) {\n    for (const meeting of section.meetings) {\n      if (meeting.start_time && meeting.end_time && meeting.meeting_days) {\n        const start = (meeting.start_time - START_TIME * 60) / (dayLength * 60);\n        const end = (meeting.end_time - START_TIME * 60) / (dayLength * 60);\n        const duration = end - start;\n        const displayText = `${section.dept}-${section.course_num}-${\n          section.section_num\n          }`;\n        for (const day of meeting.meeting_days) {\n          meetingsMap[day].push(\n            <MeetingBlock\n              key={Math.random() * Number.MAX_SAFE_INTEGER}\n              start={start}\n              duration={duration}\n              displayText={displayText}\n            />\n          );\n        }\n      }\n    }\n  }\n\n  const days = [];\n  for (const [day, abbrev] of weekdays) {\n    days.push(\n      <div className=\"day\" key={abbrev}>\n        <strong className=\"week-heading\">\n          <Body1>{day}</Body1>\n        </strong>\n        {meetingsMap[abbrev]}\n      </div>\n    );\n  }\n\n  const rows = [];\n  for (let i = 0; i <= dayLength; ++i) {\n    rows.push(\n      <tr className=\"week-row\" key={i}>\n        <td\n          style={{\n            width: \"20px\",\n            height: i ? \"auto\" : \"36px\",\n            color: \"grey\",\n            textAlign: \"left\",\n            padding: \"3px 10px 0 0\",\n            paddingLeft: 10,\n            borderBottom: \"1px solid \" + \"grey\",\n            verticalAlign: \"top\"\n          }}\n        >\n          <Body1>{i ? stringifyTime(i + 7 - 1) : \"\"}</Body1>\n        </td>\n        <td\n          style={{\n            borderBottom: \"1px solid grey\",\n            boxSizing: \"border-box\"\n          }}\n        />\n      </tr>\n    );\n  }\n  return (\n    <div>\n      <div className=\"week-wrap\">\n        <div className=\"week-container\">\n          <table className=\"week-grid\">\n            <tbody>{rows}</tbody>\n          </table>\n          <div className=\"days\">{days}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: SchedulesState) => {\n  const sections: Array<Section> = [];\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      schedule.selectedCrns.forEach(crn => {\n        for (const key in schedule.courses) {\n          for (const section of schedule.courses[key].sections) {\n            if (section.crn === crn) {\n              sections.push(section);\n            }\n            if (sections.length === schedule.selectedCrns.size) {\n              return { sections };\n            }\n          }\n        }\n      });\n    }\n  }\n  return {\n    sections\n  };\n};\n\nexport default connect(mapStateToProps)(Week);\n","import React, { Component } from \"react\";\nimport Drawer, {\n  DrawerAppContent,\n  DrawerHeader,\n  DrawerContent\n} from \"@material/react-drawer\";\nimport AddCourseDialog from \"./components/AddCourseDialog\";\nimport AddScheduleDialog from \"./components/AddScheduleDialog\";\nimport CourseList from \"./components/CourseList\";\nimport Fab from \"@material/react-fab\";\n\nimport MaterialIcon from \"@material/react-material-icon\";\nimport ScheduleSelect from \"./components/ScheduleSelect\";\nimport { SchedulesState, Schedule } from \"./redux/types\";\nimport { connect } from \"react-redux\";\nimport { loadSchedules } from \"./redux/actions\";\nimport Week from \"./components/Week\";\n\ninterface AppProps {\n  anySchedulesCreated: boolean;\n  schedules: Map<string, Schedule>;\n  currScheduleName: string;\n  loadSchedules: any;\n}\n\nclass App extends Component<AppProps> {\n  state = { addCourseDialogIsOpen: false, addScheduleDialogIsOpen: false };\n\n  constructor(props: any) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.closeCourseDialog = this.closeCourseDialog.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/api/schedules/\")\n      .then(response => response.json())\n      .then(json => {\n        this.props.loadSchedules(json);\n      }).catch((err) => console.log(err));\n  }\n\n  handleClick() {\n    if (this.props.anySchedulesCreated) {\n      this.setState({ addCourseDialogIsOpen: true });\n    } else {\n      this.setState({ addScheduleDialogIsOpen: true });\n    }\n  }\n\n  closeCourseDialog() {\n    this.setState({ addCourseDialogIsOpen: false });\n  }\n  render() {\n    const { schedules } = this.props;\n    return (\n      <div className=\"drawer-container\">\n        <Drawer className=\"drawer\">\n          <DrawerHeader>\n            <ScheduleSelect scheduleNames={Array.from(schedules.keys())} />\n          </DrawerHeader>\n\n          <DrawerContent className=\"drawer-content\">\n            <CourseList />\n          </DrawerContent>\n        </Drawer>\n        <DrawerAppContent className=\"drawer-app-content\">\n          <div className=\"week\">\n            <Week />\n          </div>\n          <Fab\n            className=\"fab\"\n            icon={<MaterialIcon icon=\"add\" />}\n            onClick={this.handleClick}\n          />\n        </DrawerAppContent>\n        <AddScheduleDialog open={this.state.addScheduleDialogIsOpen} />\n        <AddCourseDialog open={this.state.addCourseDialogIsOpen} closeCourseDialog={this.closeCourseDialog}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => ({\n  anySchedulesCreated: Array.from(state.schedules.keys()).length !== 0,\n  schedules: state.schedules,\n  currScheduleName: state.currScheduleName\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    loadSchedules: (schedules: Array<any>) => dispatch(loadSchedules(schedules))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SchedulesState,\n  Schedule,\n  ActionTypes,\n  ADD_SECTION,\n  REMOVE_SECTION,\n  ADD_COURSE,\n  REMOVE_COURSE,\n  ADD_SCHEDULE,\n  REMOVE_SCHEDULE,\n  SELECT_SCHEDULE,\n  LOAD_SCHEDULES,\n  Course\n} from \"./types\";\n\nlet x = new Map<string, Schedule>();\n\n// let DummySched: Schedule = {\n//   \"name\": \"Dummy\",\n//   \"term_code\": 201931,\n//   \"courses\": {\n//     \"ACCT-209\": { \"dept\": \"ACCT\", \"course_num\": \"209\", \"name\": \"Survey Of Acct Prin\", \"description\": \"Accounting survey for non-business majors; non-technical accounting procedures, preparation and interpretation of financial statements and internal control. May not be used to satisfy degree requirements for majors in business. Business majors who choose to take this course must do so on a satisfactory/unsatisfactory basis.\", \"prerequisites\": null, \"corequisites\": null, \"min_credits\": 3.0, \"max_credits\": 3.0, \"distribution_of_hours\": \"3 Lecture Hours.\", \"sections\": [{ \"name\": \"SURVEY OF ACCT PRIN\", \"term_code\": 201931, \"crn\": 10002, \"dept\": \"ACCT\", \"course_num\": \"209\", \"section_num\": \"502\", \"min_credits\": 3.0, \"max_credits\": 3.0, \"instructor\": \"Morgan E Clarke\", \"meetings\": [{ \"location\": \"Wehner - College of Business 113\", \"meeting_days\": \"R\", \"start_time\": 480, \"end_time\": 555, \"meeting_type\": \"Lecture\" }], \"historical_performance\": { \"A\": null, \"B\": null, \"C\": null, \"D\": null, \"F\": null, \"I\": null, \"S\": null, \"U\": null, \"Q\": null, \"X\": null } }, { \"name\": \"SURVEY OF ACCT PRIN\", \"term_code\": 201931, \"crn\": 27822, \"dept\": \"ACCT\", \"course_num\": \"209\", \"section_num\": \"503\", \"min_credits\": 3.0, \"max_credits\": 3.0, \"instructor\": \"Morgan E Clarke\", \"meetings\": [{ \"location\": \"Wehner - College of Business 113\", \"meeting_days\": \"T\", \"start_time\": 480, \"end_time\": 480, \"meeting_type\": \"Lecture\" }], \"historical_performance\": { \"A\": null, \"B\": null, \"C\": null, \"D\": null, \"F\": null, \"I\": null, \"S\": null, \"U\": null, \"Q\": null, \"X\": null } }, { \"name\": \"SURVEY OF ACCT PRIN\", \"term_code\": 201931, \"crn\": 27824, \"dept\": \"ACCT\", \"course_num\": \"209\", \"section_num\": \"504\", \"min_credits\": 3.0, \"max_credits\": 3.0, \"instructor\": \"Morgan E Clarke\", \"meetings\": [{ \"location\": \"Wehner - College of Business 113\", \"meeting_days\": \"R\", \"start_time\": 480, \"end_time\": 555, \"meeting_type\": \"Lecture\" }], \"historical_performance\": { \"A\": null, \"B\": null, \"C\": null, \"D\": null, \"F\": null, \"I\": null, \"S\": null, \"U\": null, \"Q\": null, \"X\": null } }, { \"name\": \"SURVEY OF ACCT PRIN\", \"term_code\": 201931, \"crn\": 10001, \"dept\": \"ACCT\", \"course_num\": \"209\", \"section_num\": \"501\", \"min_credits\": 3.0, \"max_credits\": 3.0, \"instructor\": \"Morgan E Clarke\", \"meetings\": [{ \"location\": \"Wehner - College of Business 113\", \"meeting_days\": \"T\", \"start_time\": 480, \"end_time\": 555, \"meeting_type\": \"Lecture\" }], \"historical_performance\": { A: 30, B: 20, C: 10, D: 0, F: 0, I: 0, S: 0, U: 0, Q: 30, X: 0 } }] }\n//   },\n//   \"id\": 1,\n//   \"selectedCrns\": new Set<number>([10001])\n// }\n\n// x.set(\"Dummy\", DummySched);\n\nconst initialState: SchedulesState = {\n  schedules: new Map<string, Schedule>(),\n  // schedules: x,\n  currScheduleName: undefined\n};\n\nconst timeStringToMinSinceMidnight = (timeString: string): number => {\n  const [hour, minute, second] = timeString.split(\":\").map((chunk) => Number.parseInt(chunk));\n  return (hour * 60) + minute + (second / 60);\n}\n\n\nexport function reducer(\n  state = initialState,\n  action: ActionTypes\n): SchedulesState {\n  timeStringToMinSinceMidnight(\"08:00:00\")\n  let newState = { ...state };\n  const { currScheduleName } = newState;\n  if (action.type === SELECT_SCHEDULE) {\n    newState.currScheduleName = action.payload;\n  }\n  if (currScheduleName) {\n    const schedule = newState.schedules.get(currScheduleName);\n    if (schedule) {\n      switch (action.type) {\n        case ADD_SECTION:\n          schedule.selectedCrns.add(action.payload);\n          break;\n        case REMOVE_SECTION:\n          schedule.selectedCrns.delete(action.payload);\n          break;\n        case ADD_COURSE:\n          schedule.courses[`${action.payload.dept}-${action.payload.course_num}`] = action.payload;\n          break;\n        case REMOVE_COURSE:\n          const { dept, course_num } = action.payload;\n          delete schedule.courses[`${dept}-${course_num}`];\n          newState.schedules.set(currScheduleName, schedule);\n          break;\n        case REMOVE_SCHEDULE:\n          newState.schedules.delete(action.payload);\n          break;\n      }\n    } else {\n      if (action.type === ADD_SCHEDULE) {\n        // const newSchedule: Schedule = {\n        //   name: action.payload.name,\n        //   term_code: action.payload.term_code,\n        //   i\n        //   courses: {},\n        //   selectedCrns: new Set<number>()\n        // };\n        // newState.schedules.set(action.payload.name, newSchedule);\n      } else {\n        throw Error(\"The schedule attempting to be accessed does not exist.\");\n      }\n    }\n  } else {\n    if (action.type === LOAD_SCHEDULES) {\n      for (let scheduleName in action.payload) {\n        let schedule = action.payload[scheduleName];\n        for (let courseName in schedule.courses) {\n          const course = schedule.courses[courseName];\n          for (let section of course.sections) {\n            for (let meeting of section.meetings) {\n              if (meeting.start_time) {\n                meeting.start_time = timeStringToMinSinceMidnight(meeting.start_time);\n              }\n              if (meeting.end_time) {\n                meeting.end_time = timeStringToMinSinceMidnight(meeting.end_time);\n              }\n            }\n          }\n        }\n        schedule.selectedCrns = new Set<number>(schedule.sections.map((section: string) =>\n          Number.parseInt(section.split(\"_\")[0])\n        ));\n        delete schedule.sections;\n        newState.schedules.set(scheduleName, schedule);\n      }\n    }\n  }\n  console.log(newState);\n  return newState;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer } from \"./redux/reducers\";\n\nimport \"@material/react-drawer/dist/drawer.min.css\";\nimport \"@material/react-checkbox/dist/checkbox.min.css\";\nimport \"@material/react-list/dist/list.min.css\";\nimport \"@material/react-icon-button/dist/icon-button.min.css\";\nimport \"@material/react-material-icon/dist/material-icon.min.css\";\nimport \"@material/react-fab/dist/fab.min.css\";\nimport \"@material/react-dialog/dist/dialog.min.css\";\nimport \"@material/react-button/dist/button.min.css\";\nimport \"@material/react-select/dist/select.min.css\";\nimport \"@material/react-typography/dist/typography.min.css\";\nimport \"@material/react-text-field/dist/text-field.min.css\";\nimport \"@material/react-menu-surface/dist/menu-surface.min.css\";\n\nimport \"./App.scss\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}