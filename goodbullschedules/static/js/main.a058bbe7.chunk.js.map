{"version":3,"sources":["utils.ts","redux/types.ts","redux/actions.ts","components/AddCourseContent.tsx","components/AddScheduleContent.jsx","components/AddDialog.tsx","components/SectionListItem.tsx","components/CourseListItem.tsx","components/CourseList.tsx","components/ScheduleSelect.tsx","components/MeetingBlock.tsx","components/Week.tsx","App.tsx","serviceWorker.js","redux/reducers.ts","index.tsx"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","ADD_SECTION","REMOVE_SECTION","ADD_COURSE","REMOVE_COURSE","ADD_SCHEDULE","REMOVE_SCHEDULE","SELECT_SCHEDULE","LOAD_SCHEDULES","selectSchedule","type","payload","AddCourseContent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","results","handleChange","bind","assertThisInitialized","dialogClosing","search","debounce","resultSelected","selectedIndex","_this$state$results$s","dept","course_num","body","course_id","concat","headers","Content-Type","X-CSRFToken","that","fetch","currScheduleId","method","mode","JSON","stringify","then","response","json","addCourse","setState","e","currentTarget","closeDialog","react_default","a","createElement","react_text_field_dist_default","helperText","react_text_field_dist","trailingIcon","react_material_icon_dist_default","role","icon","onChange","react_list_dist_default","className","handleSelect","map","_ref","react_list_dist","key","primaryText","React","Component","connect","currScheduleName","schedule","schedules","get","id","dispatch","AddScheduleContent","terms","activeTerm","handleValueChange","submitScheduleName","handleTermChange","active","console","log","undefined","term_code","csrftoken","addSchedule","target","options","term","termCode","termCodeStr","toString","year","substr","semester","campus","termCodeToString","style","width","label","onTrailingIconSelect","react_select_dist_default","selectedCrns","Set","courses","AddDialog","activeIndex","handleActiveIndexUpdate","contents","components_AddCourseContent","components_AddScheduleContent","react_dialog_dist_default","open","react_dialog_dist","react_tab_bar_dist_default","react_tab_dist_default","LETTER_MAP","A","B","C","D","F","Q","GradeDistribution","historical_performance","divs","sum","letter","val","push","backgroundColor","toFixed","display","border","boxSizing","height","marginLeft","SectionListItem","checkboxClickHandler","isChecked","has","section","crn","sectionId","removeSection","addSection","section_id","_this$props$section","section_num","instructor","react_checkbox_dist","initRipple","checked","secondaryText","graphic","SectionListItem_GradeDistribution","sectionCrn","CourseListItem","indeterminate","handleDeleteClick","removeCourse","triggerElem","meta","react_icon_button_dist_default","onClick","Collapsible_default","trigger","transitionTime","twoLine","sections","components_SectionListItem","CourseList","courseListItems","_this$props$courses$_","sectionProps","components_CourseListItem","avatarList","objectSpread","ScheduleSelect","handleSelectionChange","scheduleNames","evt","MeetingBlock","position","top","start","duration","borderRadius","background","alignItems","justifyContent","react_typography_dist","displayText","stringifyTime","minutesSinceMidnight","minutes","hours","Math","round","floor","date","Date","setHours","setMinutes","setSeconds","_time$split","toTimeString","_time$split2","slicedToArray","hh","mm","forEach","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Symbol","iterator","next","done","size","err","return","meetingsMap","M","T","W","R","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","meetings","meeting","start_time","end_time","meeting_days","START_TIME","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","components_MeetingBlock","random","Number","MAX_SAFE_INTEGER","days","_i","_weekdays","_ref3","_ref2","day","abbrev","rows","END_TIME","color","textAlign","padding","paddingLeft","borderBottom","verticalAlign","App","dialogOpen","handleClick","_this2","loadSchedules","catch","window","location","href","scheduleHeader","anySchedulesCreated","components_ScheduleSelect","Array","from","keys","dist_default","dist","components_CourseList","components_Week","react_fab_dist_default","mini","handleLogout","AddDialog_AddDialog","Boolean","hostname","match","initialState","Map","timeStringToMinSinceMidnight","timeString","_timeString$split$map","chunk","parseInt","_timeString$split$map2","store","createStore","arguments","action","newState","set","add","delete","course","_action$payload","scheduleName","courseName","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6WAAO,SAASA,EAAUC,GACtB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,IAAIH,EAASC,EAAQE,GAAGE,OACxB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIZ,OAAON,ECZJ,IAAMU,EAAc,cACdC,EAAiB,iBACjBC,EAAa,aACbC,EAAgB,gBAChBC,EAAe,eACfC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAiB,iBC6CvB,SAASC,EAAenB,GAC7B,MAAO,CAAEoB,KAAMH,EAAiBI,QAASrB,OCrCrCsB,cAGJ,SAAAA,EAAYC,GAA8B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACxCE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHRQ,MAAQ,CAAEC,MAAO,GAAIC,QAAS,IAI5BT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACpBA,EAAKa,cAAgBb,EAAKa,cAAcF,KAAnBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACrBA,EAAKc,OAASC,mBAASf,EAAKc,OAAQ,KAAKH,KAA3BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACdA,EAAKgB,eAAiBhB,EAAKgB,eAAeL,KAApBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KALkBA,8EAQ3BiB,GAAuB,IAAAC,EACPf,KAAKI,MAAME,QAAQQ,GAAxCE,EAD4BD,EAC5BC,KAAMC,EADsBF,EACtBE,WACRC,EAAO,CACXC,UAAS,GAAAC,OAAKJ,EAAL,KAAAI,OAAaH,IAGlBI,EAAU,CACdC,eAAgB,mBAChBC,cAHgBnD,EAAU,cAKtBoD,EAAOxB,KACbyB,MAAK,kBAAAL,OAAmBpB,KAAKJ,MAAM8B,eAA9B,YAAwD,CAC3DC,OAAQ,QACRC,KAAM,cACNP,UACAH,KAAMW,KAAKC,UAAUZ,KAEpBa,KAAK,SAACC,GAAD,OAAwBA,EAASC,SACtCF,KAAK,SAACE,GAAD,OAAgBT,EAAK5B,MAAMsC,UAAUD,KAC7CjC,KAAKU,iDAIL,IAAMc,EAAOxB,KACbyB,MAAK,sBAAAL,OAAuBpB,KAAKI,MAAMC,QACpC0B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIT,EAAKW,SAAS,CAAE7B,QAAS2B,2CAG9BG,GACXpC,KAAKmC,SAAS,CAAE9B,MAAO+B,EAAEC,cAAchC,QACvCL,KAAKW,iDAILX,KAAKmC,SAAS,CAAE7B,QAAS,GAAID,MAAO,KACpCL,KAAKJ,MAAM0C,+CAGX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,WAAYJ,EAAAC,EAAAC,cAACG,EAAA,WAAD,eACZC,aAAcN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAcO,KAAK,SAASC,KAAK,YAE/CT,EAAAC,EAAAC,cAACG,EAAA,MAAD,CAAOvC,MAAOL,KAAKI,MAAMC,MAAO4C,SAAUjD,KAAKO,gBAEjDgC,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,UAAU,sBACVC,aAAcpD,KAAKa,gBAElBb,KAAKI,MAAME,QAAQ+C,IAAI,SAAAC,EAA6B3E,GAA7B,IAAGN,EAAHiF,EAAGjF,KAAM2C,EAATsC,EAAStC,KAAMC,EAAfqC,EAAerC,WAAf,OACtBsB,EAAAC,EAAAC,cAACc,EAAA,SAAD,CAAUC,IAAK7E,GACb4D,EAAAC,EAAAC,cAACc,EAAA,aAAD,CAAcE,YAAW,GAAArC,OAAKJ,EAAL,KAAAI,OAAaH,EAAb,MAAAG,OAA4B/C,iBAhEpCqF,IAAMC,WA0FtBC,cAjBS,SAACxD,GACvB,GAAIA,EAAMyD,iBAAkB,CAC1B,IAAMC,EAAW1D,EAAM2D,UAAUC,IAAI5D,EAAMyD,kBAC3C,GAAIC,EACF,MAAO,CACLpC,eAAgBoC,EAASG,MAMN,SAACC,GAC1B,MAAO,CACLhC,UAAW,SAACD,GAAD,OAAeiC,ED7ErB,CAAEzE,KAAMP,EAAYQ,QC6EoBuC,OAIlC2B,CAGbjE,oBCzEIwE,cAEJ,SAAAA,EAAYvE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACjBtE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMJ,KAFRQ,MAAQ,CAAEC,MAAO,GAAI+D,MAAO,GAAIC,WAAY,MAG1CxE,EAAKyE,kBAAoBzE,EAAKyE,kBAAkB9D,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACzBA,EAAK0E,mBAAqB1E,EAAK0E,mBAAmB/D,KAAxBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC1BA,EAAK2E,iBAAmB3E,EAAK2E,iBAAiBhE,KAAtBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAJPA,mFAQjB,IAAM2B,EAAOxB,KACbyB,MAAM,mBACHM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GACJ,IAAIwC,EAAS,KACTxC,EAAKrD,OAAS,IAChB6F,EAASxC,EAAK,IAEhBT,EAAKW,SAAS,CAAEiC,MAAOnC,EAAMoC,WAAYI,gDAK7BrC,GAChBpC,KAAKmC,SAAS,CAAE9B,MAAO+B,EAAEC,cAAchC,qDAMvC,GAFAqE,QAAQC,IAAI3E,KAAKI,MAAMC,OACvBqE,QAAQC,IAAI3E,KAAKI,MAAMiE,iBACOO,IAA1B5E,KAAKI,MAAMiE,YAAsD,OAA1BrE,KAAKI,MAAMiE,WAAtD,CAGA,IAAMnD,EAAO,CACX7C,KAAM2B,KAAKI,MAAMC,MACjBwE,UAAW7E,KAAKI,MAAMiE,YAExBK,QAAQC,IAAIzD,GACZ,IAAM4D,EAAY1G,EAAU,aAKtBoD,EAAOxB,KACbyB,MAAK,kBAAoB,CACvBE,OAAQ,OACRN,QAPc,CACdC,eAAgB,mBAChBC,cAAeuD,GAMf5D,KAAMW,KAAKC,UAAUZ,KAEpBa,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GACJT,EAAK5B,MAAMmF,YAAY9C,KAE3BjC,KAAKmC,SAAS,CAAE9B,MAAO,KAEvBL,KAAKJ,MAAM0C,wDAGIF,GACfpC,KAAKmC,SAAS,CAAEkC,WAAYjC,EAAE4C,OAAO3E,yCAIrC,IAAM4E,EAAUjF,KAAKI,MAAMgE,MAAMf,IAAI,SAAC6B,EAAMvG,GAAP,OACnC4D,EAAAC,EAAAC,cAAA,UAAQe,IAAK7E,EAAG0B,MAAO6E,GA3FJ,SAAAC,GACvB,IAAMC,EAAcD,EAASE,WACvBC,EAAOF,EAAYG,OAAO,EAAG,GAE/BC,EAAWJ,EAAY,GACV,MAAbI,EACFA,EAAW,SACW,MAAbA,EACTA,EAAW,SACW,MAAbA,IACTA,EAAW,QAGb,IAAIC,EAASL,EAAY,GAWzB,MAVe,MAAXK,EACFA,EAAS,kBACW,MAAXA,EACTA,EAAS,YACW,MAAXA,EACTA,EAAS,QACW,MAAXA,IACTA,EAAS,kBAGJD,EAAW,IAAMF,EAAO,MAAQG,EAoEhCC,CAAiBR,MAGtB,OACE3C,EAAAC,EAAAC,cAAA,OAAKkD,MAAO,CAAEC,MAAO,SACnBrD,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEqD,MAAM,gBACNF,MAAO,CAAEC,MAAO,QAChB/C,aAAcN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAcO,KAAK,SAASC,KAAK,kBAC/C8C,qBAAsB9F,KAAKuE,oBAE3BhC,EAAAC,EAAAC,cAACG,EAAA,MAAD,CAAOvC,MAAOL,KAAKI,MAAMC,MAAO4C,SAAUjD,KAAKsE,qBAEjD/B,EAAAC,EAAAC,cAAA,OAAKkD,MAAO,CAAEC,MAAO,SACnBrD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAQS,SAAUjD,KAAKwE,kBAAmBS,YA/EnBvB,IAAMC,WA6FxBC,cACb,KARyB,SAAAM,GACzB,MAAO,CACLa,YAAa,SAAA9C,GAAI,OAAIiC,EFxFhB,CACLzE,KAAML,EACNM,QAAS,CACPrB,MAJsB2D,EEyFkBC,GFrFzB5D,KACf4F,GAAIjC,EAASiC,GACbY,UAAW7C,EAAS6C,UACpBmB,aAAc,IAAIC,IAClBC,QAAS,MARR,IAAqBlE,GE0FxBxC,eAAgB,SAAAnB,GAAI,OAAI6F,EAAS1E,EAAenB,OAIrCuF,CAGbO,GCvHmBgC,6MACnB/F,MAAQ,CAAEgG,YAAa,KAEvBC,wBAA0B,SAACD,GACzBvG,EAAKsC,SAAS,CAAEiE,yFAGhB,IAAME,EAAW,CACf/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAkBjE,YAAatC,KAAKJ,MAAM0C,cAC1CC,EAAAC,EAAAC,cAAC+D,EAAD,CAAoBlE,YAAatC,KAAKJ,MAAM0C,eAE9C,OACEC,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQkE,KAAM1G,KAAKJ,MAAM8G,MACvBnE,EAAAC,EAAAC,cAACkE,EAAA,cAAD,KACEpE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CACE4D,YAAapG,KAAKI,MAAMgG,YACxBC,wBAAyBrG,KAAKqG,yBAE9B9D,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMU,UAAU,uBAAhB,WAEFZ,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMU,UAAU,uBAAhB,cAGHmD,EAAStG,KAAKI,MAAMgG,uBA1BM1C,IAAMC,6DCOvCmD,EAAwC,CAC5CC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,UACLC,EAAK,WAGDC,EAEF,SAAAzH,GAAS,IACH0H,EAA2B1H,EAA3B0H,uBACR,GAAoC,OAAhCA,EAAsB,EACxB,OAAO/E,EAAAC,EAAAC,cAAA,YAEP,IAAM8E,EAAO,GACTC,EAAM,EACV,IAAK,IAAMC,KAAUX,EAAY,CAC/B,IAAMY,EAAMJ,EAAuBG,GACnCD,GAAOE,GAAY,EAErB,IAAK,IAAMD,KAAUX,EAAY,CAC/B,IAAMY,EAAMJ,EAAuBG,GAC/BC,GACFH,EAAKI,KAAKpF,EAAAC,EAAAC,cAAA,OAAKe,IAAKiE,EAAQ9B,MAAO,CACjCiC,gBAAiBd,EAAWW,GAC5B7B,MAAK,GAAAxE,QAAOsG,EAAMF,EAAO,IAAM,IAAKK,QAAQ,GAAvC,KACLC,QAAS,eACTC,OAAQ,kBACRC,UAAW,aACXC,OAAQ,OAId,OAAO1F,EAAAC,EAAAC,cAAA,OAAKkD,MAAO,CAAEC,MAAO,MAAOsC,WAAY,SAAWX,IAIxDY,eAIJ,SAAAA,EAAYvI,GAA6B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACvCtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,KACDwI,qBAAuBvI,EAAKuI,qBAAqB5H,KAA1BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAC5BA,EAAKwI,UAAYxI,EAAKwI,UAAU7H,KAAfV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACjBA,EAAKuI,qBAAuBvI,EAAKuI,qBAAqB5H,KAA1BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAJWA,2EAQvC,QAAIG,KAAKJ,MAAMoG,cACNhG,KAAKJ,MAAMoG,aAAasC,IAAItI,KAAKJ,MAAM2I,QAAQC,oDAMxD,IAAMC,EAAS,GAAArH,OAAMpB,KAAKJ,MAAM2I,QAAQC,IAAzB,KAAApH,OAAgCpB,KAAKJ,MAAM2I,QAAQ1D,WAE5DxD,EAAU,CACdC,eAAgB,mBAChBC,cAHgBnD,EAAU,cAK5B,GAAI4B,KAAKqI,YACPrI,KAAKJ,MAAM8I,cAAc1I,KAAKJ,MAAM2I,QAAQC,KAC5C/G,MAAK,kBAAAL,OAAmBpB,KAAKJ,MAAM8B,eAA9B,cAAAN,OAAyDqH,GAAa,CAAE9G,OAAQ,SAAUN,gBAC1F,CACLrB,KAAKJ,MAAM+I,WAAW3I,KAAKJ,MAAM2I,QAAQC,KAEzC,IAAMtH,EAAO,CACX0H,WAAYH,GAGdhH,MAAK,kBAAAL,OAAmBpB,KAAKJ,MAAM8B,eAA9B,aAAyD,CAAEC,OAAQ,QAASN,UAASH,KAAMW,KAAKC,UAAUZ,uCAG1G,IAAA2H,EACqD7I,KAAKJ,MAAM2I,QAA/DO,EADDD,EACCC,YAAaC,EADdF,EACcE,WAAYzB,EAD1BuB,EAC0BvB,uBACjC,OACE/E,EAAAC,EAAAC,cAACc,EAAA,SAAD,KACEhB,EAAAC,EAAAC,cAACuG,EAAA,SAAD,CAAUC,WAAY,aAAWC,QAASlJ,KAAKqI,YAAapF,SAAUjD,KAAKoI,uBAC3E7F,EAAAC,EAAAC,cAACc,EAAA,aAAD,CAAcE,YAAaqF,EAAaK,cAAeJ,GAAc,QACrExG,EAAAC,EAAAC,cAACc,EAAA,gBAAD,CAAiB6F,QAAS7G,EAAAC,EAAAC,cAAC4G,EAAD,CAAmB/B,uBAAwBA,cA5C/C5D,IAAMC,WAsErBC,eAbS,SAACxD,GACvB,IAAI4F,EAAe,IAAIC,IACnBvE,GAAkB,EACtB,GAAItB,EAAMyD,iBAAkB,CAC1B,IAAMC,EAAW1D,EAAM2D,UAAUC,IAAI5D,EAAMyD,kBACvCC,IACFkC,EAAelC,EAASkC,aACxBtE,EAAiBoC,EAASG,IAG9B,MAAO,CAAE+B,eAActE,mBAjBE,SAACwC,GAC1B,MAAO,CACLyE,WAAY,SAACW,GAAD,OAAwBpF,EJ/FjC,SAAoBoF,GACzB,MAAO,CAAE7J,KAAMT,EAAaU,QAAS4J,GI8FUX,CAAWW,KACxDZ,cAAe,SAACY,GAAD,OAAwBpF,EJ5FpC,SAAuBoF,GAC5B,MAAO,CAAE7J,KAAMR,EAAgBS,QAAS4J,GI2FUZ,CAAcY,OAiBnD1F,CAA6CuE,ICxGtDoB,eAKJ,SAAAA,EAAY3J,GAA4B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuJ,IACtC1J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyJ,GAAApJ,KAAAH,KAAMJ,KAHRQ,MAAQ,CAAE8I,SAAS,EAAOM,eAAe,GAIvC3J,EAAK4J,kBAAoB5J,EAAK4J,kBAAkBjJ,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAFaA,mFAMtCG,KAAKJ,MAAM8J,aAAa1J,KAAKJ,MAAMoB,KAAMhB,KAAKJ,MAAMqB,YACpD,IAAME,EAAS,GAAAC,OAAMpB,KAAKJ,MAAMoB,KAAjB,KAAAI,OAAyBpB,KAAKJ,MAAMqB,YAE7CI,EAAU,CACdC,eAAgB,mBAChBC,cAHgBnD,EAAU,cAK5BqD,MAAK,kBAAAL,OAAmBpB,KAAKJ,MAAM8B,eAA9B,aAAAN,OAAwDD,GAAa,CAAEQ,OAAQ,SAAUN,6CAG9F,IAAMsI,EACJpH,EAAAC,EAAAC,cAACc,EAAA,SAAD,CAAUJ,UAAU,oBAClBZ,EAAAC,EAAAC,cAACc,EAAA,aAAD,CACEE,YAAW,GAAArC,OAAKpB,KAAKJ,MAAMoB,KAAhB,KAAAI,OAAwBpB,KAAKJ,MAAMqB,YAC9CkI,cAAenJ,KAAKJ,MAAMvB,OAE5BkE,EAAAC,EAAAC,cAACc,EAAA,aAAD,CACEqG,KACErH,EAAAC,EAAAC,cAACoH,EAAArH,EAAD,CAAYsH,QAAS9J,KAAKyJ,mBACxBlH,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAcQ,KAAK,eAO7B,OACET,EAAAC,EAAAC,cAACsH,EAAAvH,EAAD,CAAawH,QAASL,EAAaM,eAAgB,KACjD1H,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAM0H,SAAO,EAAC/G,UAAU,mBACrBnD,KAAKJ,MAAMuK,SAAS9G,IAAI,SAAAC,EAAc3E,GAAM,IAAjB4J,EAAiBjF,EAAjBiF,QAC1B,OAAOhG,EAAAC,EAAAC,cAAC2H,GAAD,CAA0B5G,IAAK7E,EAAG4J,QAASA,eAzCjC7E,IAAMC,WAkEpBC,eAjBS,SAACxD,GACvB,GAAIA,EAAMyD,iBAAkB,CAC1B,IAAMC,EAAW1D,EAAM2D,UAAUC,IAAI5D,EAAMyD,kBAC3C,GAAIC,EACF,MAAO,CACLpC,eAAgBoC,EAASG,MAMN,SAACC,GAC1B,MAAO,CACLwF,aAAc,SAAC1I,EAAcC,GAAf,OAAsCiD,EL3DjD,SACLlD,EACAC,GAEA,MAAO,CAAExB,KAAMN,EAAeO,QAAS,CAAEsB,OAAMC,eKuDgByI,CAAa1I,EAAMC,OAIrE2C,CAA6C2F,ICjFtDc,oLAEF,IAAIC,EAAyB,GAC7B,IAAK,IAAM9G,KAAOxD,KAAKJ,MAAMsG,QAAS,KAAAqE,EACSvK,KAAKJ,MAAMsG,QAAQ1C,GAAxDxC,EAD4BuJ,EAC5BvJ,KAAM3C,EADsBkM,EACtBlM,KAAM4C,EADgBsJ,EAChBtJ,WACduJ,EAF8BD,EACJJ,SACF9G,IAAI,SAACkF,GAAD,MAAc,CAAEA,aAClD+B,EAAgB3C,KACdpF,EAAAC,EAAAC,cAACgI,GAAD,CACEjH,IAAG,GAAApC,OAAKJ,EAAL,KAAAI,OAAaH,GAChB5C,KAAMA,EACN2C,KAAMA,EACNC,WAAYA,EACZkJ,SAAUK,KAIhB,OACEjI,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAM0H,SAAO,EAACQ,YAAU,GACrBJ,UAlBgB5G,IAAMC,WAmChBC,eAXS,SAACxD,GACvB,IAAI8F,EAAqC,GACzC,GAAI9F,EAAMyD,iBAAkB,CAC1B,IAAMC,EAAW1D,EAAM2D,UAAUC,IAAI5D,EAAMyD,kBACvCC,IACFoC,EAAOpG,OAAA6K,EAAA,EAAA7K,CAAA,GAAOgE,EAASoC,UAG3B,MAAO,CAAEA,YAGItC,CAAyByG,wBCjClCO,eACJ,SAAAA,EAAYhL,GAA4B,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4K,IACtC/K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8K,GAAAzK,KAAAH,KAAMJ,KACDiL,sBAAwBhL,EAAKgL,sBAAsBrK,KAA3BV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAFSA,mFAMjCG,KAAKJ,MAAMiE,kBAEV7D,KAAKJ,MAAMkL,cAAclM,OAAS,GACpCoB,KAAKJ,MAAMJ,eAAeQ,KAAKJ,MAAMkL,cAAc,kDAKnCC,GAChBA,EAAI/F,OACNhF,KAAKJ,MAAMJ,eAAeuL,EAAI/F,OAAO3E,OAErCqE,QAAQC,IAAI,+DAKd,OAAwC,IAApC3E,KAAKJ,MAAMkL,cAAclM,OACpB,KAGL2D,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEW,UAAU,kBACV9C,MAAOL,KAAKJ,MAAMiE,iBAClBZ,SAAUjD,KAAK6K,sBACf5F,QAASjF,KAAKJ,MAAMkL,uBAhCDpH,IAAMC,WAiDpBC,eAVS,SAACxD,GAAD,MAA4B,CAClDyD,iBAAkBzD,EAAMyD,mBAGC,SAACK,GAC1B,MAAO,CACL1E,eAAgB,SAACnB,GAAD,OAAkB6F,EAAS1E,EAAenB,OAI/CuF,CAGbgH,sBCnCaI,GApBoC,SACjDpL,GADiD,OAG/C2C,EAAAC,EAAAC,cAAA,OACEkD,MAAO,CACLsF,SAAU,WACVC,IAAmB,IAAdtL,EAAMuL,MAAc,IACzBlD,OAAyB,IAAjBrI,EAAMwL,SAAiB,IAC/BxF,MAAO,OACPyF,aAAc,EACdC,WAAY,MACZxD,QAAS,OACTyD,WAAY,SACZC,eAAgB,WAGlBjJ,EAAAC,EAAAC,cAACgJ,GAAA,MAAD,KAAQ7L,EAAM8L,eCfdC,GAAgB,SAACC,GACrB,IAAIC,EAAUD,EAAuB,EACjCE,EAAQF,EAAuBC,EAInC,GAHAA,GAAW,GACXA,EAAUE,KAAKC,MAAMH,GAEjBC,EAAQ,GAAI,CACJC,KAAKE,MAAMH,EAAQ,IAC7BA,GAAS,GAGX,IAAII,EAAO,IAAIC,KACfD,EAAKE,SAASN,GACdI,EAAKG,WAAWR,GAChBK,EAAKI,WAAW,GAEhB,IAhB8DC,EAgBjDL,EAAKM,eAAe9N,MAAM,KAAK,GAClBA,MAAM,KAjB8B+N,EAAA3M,OAAA4M,GAAA,EAAA5M,CAAAyM,EAAA,GAiBvDI,EAjBuDF,EAAA,GAiBnDG,EAjBmDH,EAAA,GAAAA,EAAA,GAmB9D,SAAArL,OAAUuL,EAAV,KAAAvL,OAAgBwL,IA0HHhJ,eAxBS,SAACxD,GACvB,IAAM+J,EAA2B,GACjC,GAAI/J,EAAMyD,iBAAkB,CAC1B,IAAMC,EAAW1D,EAAM2D,UAAUC,IAAI5D,EAAMyD,kBACvCC,GACFA,EAASkC,aAAa6G,QAAQ,SAAArE,GAC5B,IAAK,IAAMhF,KAAOM,EAASoC,QAAS,KAAA4G,GAAA,EAAAC,GAAA,EAAAC,OAAApI,EAAA,IAClC,QAAAqI,EAAAC,EAAsBpJ,EAASoC,QAAQ1C,GAAK2G,SAA5CgD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsD,KAA3CvE,EAA2C0E,EAAA5M,MAIpD,GAHIkI,EAAQC,MAAQA,GAClB2B,EAASxC,KAAKY,GAEZ4B,EAASvL,SAAWkF,EAASkC,aAAauH,KAC5C,MAAO,CAAEpD,aANqB,MAAAqD,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,OAa1C,MAAO,CACL7C,aAIWvG,CAvHoB,SAAChE,GAClC,IAOM8N,EAA4D,CAChEC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACH3G,EAAG,IAbkD4G,GAAA,EAAAC,GAAA,EAAAC,OAAArJ,EAAA,IAmBvD,QAAAsJ,EAAAC,EAAsBvO,EAAMuK,SAA5BgD,OAAAC,cAAAW,GAAAG,EAAAC,EAAAd,QAAAC,MAAAS,GAAA,EAAsC,KAA3BxF,EAA2B2F,EAAA7N,MAAA+N,GAAA,EAAAC,GAAA,EAAAC,OAAA1J,EAAA,IACpC,QAAA2J,EAAAC,EAAsBjG,EAAQkG,SAA9BtB,OAAAC,cAAAgB,GAAAG,EAAAC,EAAAnB,QAAAC,MAAAc,GAAA,EAAwC,KAA7BM,EAA6BH,EAAAlO,MACtC,GAAIqO,EAAQC,YAAcD,EAAQE,UAAYF,EAAQG,aAAc,CAClE,IAAM1D,GAASuD,EAAQC,WAAaG,KAAtB,IAER1D,GADOsD,EAAQE,SAAWE,KAApB,IACW3D,EACjBO,EAAW,GAAAtK,OAAMmH,EAAQvH,KAAd,KAAAI,OAAsBmH,EAAQtH,WAA9B,KAAAG,OACfmH,EAAQO,aALwDiG,GAAA,EAAAC,GAAA,EAAAC,OAAArK,EAAA,IAOlE,QAAAsK,EAAAC,EAAkBT,EAAQG,aAA1B1B,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EACErB,EADsCwB,EAAA7O,OACrBsH,KACfpF,EAAAC,EAAAC,cAAC2M,GAAD,CACE5L,IAAKuI,KAAKsD,SAAWC,OAAOC,iBAC5BpE,MAAOA,EACPC,SAAUA,EACVM,YAAaA,KAb+C,MAAA8B,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,MAFlC,MAAAzB,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,KAnBiB,MAAAd,GAAAQ,GAAA,EAAAC,EAAAT,EAAA,YAAAO,GAAA,MAAAI,EAAAV,QAAAU,EAAAV,SAAA,WAAAO,EAAA,MAAAC,GA2CvD,IADA,IAAMuB,EAAO,GACbC,EAAA,EAAAC,EA1CiB,CACf,CAAC,SAAU,KACX,CAAC,UAAW,KACZ,CAAC,YAAa,KACd,CAAC,WAAY,KACb,CAAC,SAAU,MAqCbD,EAAAC,EAAA9Q,OAAA6Q,IAAsC,KAAAE,EAAAD,EAAAD,GAAAG,EAAA9P,OAAA4M,GAAA,EAAA5M,CAAA6P,EAAA,GAA1BE,EAA0BD,EAAA,GAArBE,EAAqBF,EAAA,GACpCJ,EAAK7H,KACHpF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,MAAMK,IAAKsM,GACxBvN,EAAAC,EAAAC,cAAA,UAAQU,UAAU,gBAChBZ,EAAAC,EAAAC,cAACgJ,GAAA,MAAD,KAAQoE,IAETnC,EAAYoC,KAMnB,IADA,IAAMC,EAAO,GACJpR,EAAI,EAAGA,GAtCEqR,KAsCgBrR,EAChCoR,EAAKpI,KACHpF,EAAAC,EAAAC,cAAA,MAAIU,UAAU,WAAWK,IAAK7E,GAC5B4D,EAAAC,EAAAC,cAAA,MACEkD,MAAO,CACLC,MAAO,OACPqC,OAAQtJ,EAAI,OAAS,OACrBsR,MAAO,OACPC,UAAW,OACXC,QAAS,eACTC,YAAa,GACbC,aAAc,iBACdC,cAAe,QAGjB/N,EAAAC,EAAAC,cAACgJ,GAAA,MAAD,KAAQ9M,EAAIgN,GAAchN,EAAI,EAAI,GAAK,KAEzC4D,EAAAC,EAAAC,cAAA,MACEkD,MAAO,CACL0K,aAAc,iBACdrI,UAAW,kBAMrB,OACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,kBACbZ,EAAAC,EAAAC,cAAA,SAAOU,UAAU,aACfZ,EAAAC,EAAAC,cAAA,aAAQsN,IAEVxN,EAAAC,EAAAC,cAAA,OAAKU,UAAU,QAAQqM,QChG3Be,eAGJ,SAAAA,EAAY3Q,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuQ,IACtB1Q,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyQ,GAAApQ,KAAAH,KAAMJ,KAHRQ,MAAQ,CAAEoQ,YAAY,GAIpB3Q,EAAK4Q,YAAc5Q,EAAK4Q,YAAYjQ,KAAjBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAFGA,mFAKJ,IAAA6Q,EAAA1Q,KAClByB,MAAM,mBACHM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GACJyO,EAAK9Q,MAAM+Q,cAAc1O,KAE1B2O,MAAM,SAAApD,GAAG,OAAI9I,QAAQC,IAAI6I,2CAI5BxN,KAAKmC,SAAS,CAAEqO,YAAaxQ,KAAKI,MAAMoQ,oDAIxCK,OAAOC,SAASC,KAAO,gDAGhB,IACChN,EAAc/D,KAAKJ,MAAnBmE,UAEJiN,EAAiB,KAMrB,OALIhR,KAAKJ,MAAMqR,sBACbD,EACEzO,EAAAC,EAAAC,cAACyO,GAAD,CAAgBpG,cAAeqG,MAAMC,KAAKrN,EAAUsN,WAItD9O,EAAAC,EAAAC,cAAA,OAAKU,UAAU,oBACbZ,EAAAC,EAAAC,cAAC6O,EAAA9O,EAAD,CAAQW,UAAU,UAChBZ,EAAAC,EAAAC,cAAC8O,EAAA,aAAD,KAAeP,GAEfzO,EAAAC,EAAAC,cAAC8O,EAAA,cAAD,CAAepO,UAAU,kBACvBZ,EAAAC,EAAAC,cAAC+O,GAAD,QAGJjP,EAAAC,EAAAC,cAAC8O,EAAA,iBAAD,CAAkBpO,UAAU,sBAC1BZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,QACbZ,EAAAC,EAAAC,cAACgP,GAAD,OAEFlP,EAAAC,EAAAC,cAACiP,GAAAlP,EAAD,CACEW,UAAU,MACVH,KAAMT,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAcQ,KAAK,QACzB8G,QAAS9J,KAAKyQ,cAEhBlO,EAAAC,EAAAC,cAACiP,GAAAlP,EAAD,CACEmP,MAAI,EACJxO,UAAU,SACVH,KAAMT,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAcQ,KAAK,gBACzB8G,QAAS9J,KAAK4R,gBAGlBrP,EAAAC,EAAAC,cAACoP,EAAD,CACEnL,KAAM1G,KAAKI,MAAMoQ,WACjBlO,YAAatC,KAAKyQ,sBA7DV9M,aAgFHC,eAZS,SAACxD,GAAD,MAA4B,CAClD6Q,oBAAmE,IAA9CE,MAAMC,KAAKhR,EAAM2D,UAAUsN,QAAQzS,OACxDmF,UAAW3D,EAAM2D,UACjBF,iBAAkBzD,EAAMyD,mBAGC,SAACK,GAC1B,MAAO,CACLyM,cAAe,SAAC5M,GAAD,OAA2BG,EV5CvC,SAAuBH,GAC5B,MAAO,CAAEtE,KAAMF,EAAgBG,QAASqE,GU2Ca4M,CAAc5M,OAItDH,CAGb2M,IC/FkBuB,QACW,cAA7BjB,OAAOC,SAASiB,UAEe,UAA7BlB,OAAOC,SAASiB,UAEhBlB,OAAOC,SAASiB,SAASC,MACvB,wECJAC,GAA+B,CACnClO,UAAW,IAAImO,IACfrO,sBAAkBe,GAGduN,GAA+B,SAACC,GAA+B,IAAAC,EACpCD,EAC5B1T,MAAM,KACN2E,IAAI,SAAAiP,GAAK,OAAIhD,OAAOiD,SAASD,KAHmCE,EAAA1S,OAAA4M,GAAA,EAAA5M,CAAAuS,EAAA,GAInE,OAAc,GAJqDG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAI9B,8GCIjCC,GAAQC,aDDP,WAGW,IAFhBtS,EAEgBuS,UAAA/T,OAAA,QAAAgG,IAAA+N,UAAA,GAAAA,UAAA,GAFRV,GACRW,EACgBD,UAAA/T,OAAA,EAAA+T,UAAA,QAAA/N,EACZiO,EAAQ/S,OAAA6K,EAAA,EAAA7K,CAAA,GAAQM,GACZyD,EAAqBgP,EAArBhP,iBAQR,GAPI+O,EAAOnT,OAASH,IAClBuT,EAAShP,iBAAmB+O,EAAOlT,SAEjCkT,EAAOnT,OAASL,IAClByT,EAAS9O,UAAU+O,IAAIF,EAAOlT,QAAQrB,KAAMuU,EAAOlT,SACnDmT,EAAShP,iBAAmB+O,EAAOlT,QAAQrB,MAEzCwF,EAAkB,CACpB,IAAMC,EAAW+O,EAAS9O,UAAUC,IAAIH,GACxC,GAAIC,EACF,OAAQ8O,EAAOnT,MACb,KAAKT,EACH8E,EAASkC,aAAa+M,IAAIH,EAAOlT,SACjC,MACF,KAAKT,EACH6E,EAASkC,aAAagN,OAAOJ,EAAOlT,SACpC,MACF,KAAKR,EACH,IAAM+T,EAAcL,EAAOlT,QAD7BqO,GAAA,EAAAC,GAAA,EAAAC,OAAArJ,EAAA,IAEE,QAAAsJ,EAAAC,EAAoB8E,EAAO9I,SAA3BgD,OAAAC,cAAAW,GAAAG,EAAAC,EAAAd,QAAAC,MAAAS,GAAA,EAAqC,KAA5BxF,EAA4B2F,EAAA7N,MAAA+N,GAAA,EAAAC,GAAA,EAAAC,OAAA1J,EAAA,IACnC,QAAA2J,EAAAC,EAAoBjG,EAAQkG,SAA5BtB,OAAAC,cAAAgB,GAAAG,EAAAC,EAAAnB,QAAAC,MAAAc,GAAA,EAAsC,KAA7BM,EAA6BH,EAAAlO,MAChCqO,EAAQC,aACVD,EAAQC,WAAawD,GACnBzD,EAAQC,aAGRD,EAAQE,WACVF,EAAQE,SAAWuD,GACjBzD,EAAQE,YATqB,MAAApB,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,KAFvC,MAAAd,GAAAQ,GAAA,EAAAC,EAAAT,EAAA,YAAAO,GAAA,MAAAI,EAAAV,QAAAU,EAAAV,SAAA,WAAAO,EAAA,MAAAC,GAgBEnK,EAASoC,QAAT,GAAA9E,OACKwR,EAAOlT,QAAQsB,KADpB,KAAAI,OAC4BwR,EAAOlT,QAAQuB,aACvCgS,EACJ,MACF,KAAK9T,EAAL,IAAA+T,EAC+BN,EAAOlT,QAA5BsB,EADVkS,EACUlS,KAAMC,EADhBiS,EACgBjS,kBACP6C,EAASoC,QAAT,GAAA9E,OAAoBJ,EAApB,KAAAI,OAA4BH,IACnC4R,EAAS9O,UAAU+O,IAAIjP,EAAkBC,GACzC,MACF,KAAKzE,EACHwT,EAAS9O,UAAUiP,OAAOJ,EAAOlT,eAKvC,GAAIkT,EAAOnT,OAASF,EAClB,IAAK,IAAI4T,KAAgBP,EAAOlT,QAAS,CACvC,IAAIoE,EAAW8O,EAAOlT,QAAQyT,GAC9B,IAAK,IAAIC,KAActP,EAASoC,QAAS,CACvC,IAAM+M,EAASnP,EAASoC,QAAQkN,GADOrE,GAAA,EAAAC,GAAA,EAAAC,OAAArK,EAAA,IAEvC,QAAAsK,EAAAC,EAAoB8D,EAAO9I,SAA3BgD,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAAqC,KAA5BxG,EAA4B2G,EAAA7O,MAAAyM,GAAA,EAAAC,GAAA,EAAAC,OAAApI,EAAA,IACnC,QAAAqI,EAAAC,EAAoB3E,EAAQkG,SAA5BtB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsC,KAA7B4B,EAA6BzB,EAAA5M,MAChCqO,EAAQC,aACVD,EAAQC,WAAawD,GACnBzD,EAAQC,aAGRD,EAAQE,WACVF,EAAQE,SAAWuD,GACjBzD,EAAQE,YATqB,MAAApB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,KAFE,MAAAQ,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,IAiBzCnL,EAASkC,aAAe,IAAIC,IAC1BnC,EAASqG,SAAS9G,IAAI,SAACkF,GAAD,OACpB+G,OAAOiD,SAAShK,EAAQ7J,MAAM,KAAK,cAGhCoF,EAASqG,SAChB0I,EAAS9O,UAAU+O,IAAIK,EAAcrP,GAK3C,OADAY,QAAQC,IAAIkO,GACLA,IClFTQ,IAASC,OACP/Q,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAUd,MAAOA,IACflQ,EAAAC,EAAAC,cAAC+Q,GAAD,OAEFjV,SAASkV,eAAe,SFgGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7R,KAAK,SAAA8R,GACjCA,EAAaC","file":"static/js/main.a058bbe7.chunk.js","sourcesContent":["export function getCookie(name: string) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}","export const ADD_SECTION = \"ADD_SECTION\";\nexport const REMOVE_SECTION = \"REMOVE_SECTION\";\nexport const ADD_COURSE = \"ADD_COURSE\";\nexport const REMOVE_COURSE = \"REMOVE_COURSE\";\nexport const ADD_SCHEDULE = \"ADD_SCHEDULE\";\nexport const REMOVE_SCHEDULE = \"REMOVE_SCHEDULE\";\nexport const SELECT_SCHEDULE = \"SELECT_SCHEDULE\";\nexport const LOAD_SCHEDULES = \"LOAD_SCHEDULES\";\n\nexport interface Meeting {\n  location: string | null;\n  meeting_days: string | null;\n  start_time: number;\n  end_time: number;\n  meeting_type: string;\n}\n\nexport interface Section {\n  dept: string;\n  course_num: string;\n  section_num: string;\n  name: string;\n  term_code: number;\n  crn: number;\n  meetings: Array<Meeting>;\n  historical_performance: {\n    A: number | null;\n    B: number | null;\n    C: number | null;\n    D: number | null;\n    F: number | null;\n    I: number | null;\n    S: number | null;\n    U: number | null;\n    Q: number | null;\n    X: number | null;\n  };\n  min_credits: number | null;\n  max_credits: number | null;\n  instructor: string | null;\n}\n\nexport interface Course {\n  dept: string;\n  course_num: string;\n  name: string;\n  prerequisites: string | null;\n  corequisites: string | null;\n  min_credits: number | null;\n  max_credits: number | null;\n  description: string | null;\n  distribution_of_hours: string | null;\n  sections: Array<Section>;\n}\n\nexport interface Schedule {\n  name: string;\n  term_code: number;\n  courses: { [key: string]: Course };\n  selectedCrns: Set<number>;\n  id: number;\n}\n\nexport interface ScheduleResponse {\n  name: string;\n  term_code: number;\n  courses: [];\n  sections: [];\n  id: number;\n}\n\nexport interface AddSectionAction {\n  type: typeof ADD_SECTION;\n  payload: number;\n}\n\nexport interface RemoveSectionAction {\n  type: typeof REMOVE_SECTION;\n  payload: number;\n}\n\nexport interface AddCourseAction {\n  type: typeof ADD_COURSE;\n  payload: Course;\n}\n\nexport interface RemoveCourseAction {\n  type: typeof REMOVE_COURSE;\n  payload: { dept: string; course_num: string };\n}\n\nexport interface AddScheduleAction {\n  type: typeof ADD_SCHEDULE;\n  payload: Schedule;\n}\n\nexport interface RemoveScheduleAction {\n  type: typeof REMOVE_SCHEDULE;\n  payload: string; // Schedule name\n}\n\nexport interface SelectScheduleAction {\n  type: typeof SELECT_SCHEDULE;\n  payload: string;\n}\n\nexport interface LoadSchedulesAction {\n  type: typeof LOAD_SCHEDULES;\n  payload: Array<any>;\n}\n\nexport interface SchedulesState {\n  schedules: Map<string, Schedule>;\n  currScheduleName: string | undefined;\n}\n\nexport type SectionActionTypes = AddSectionAction | RemoveSectionAction;\nexport type CourseActionTypes = AddCourseAction | RemoveCourseAction;\nexport type ScheduleActionTypes =\n  | AddScheduleAction\n  | RemoveScheduleAction\n  | SelectScheduleAction\n  | LoadSchedulesAction;\n\nexport type ActionTypes =\n  | SectionActionTypes\n  | CourseActionTypes\n  | ScheduleActionTypes;\n","import {\n  SectionActionTypes,\n  ADD_SECTION,\n  REMOVE_SECTION,\n  Course,\n  CourseActionTypes,\n  ADD_COURSE,\n  REMOVE_COURSE,\n  ScheduleActionTypes,\n  ScheduleResponse,\n  ADD_SCHEDULE,\n  REMOVE_SCHEDULE,\n  SELECT_SCHEDULE,\n  LOAD_SCHEDULES\n} from \"./types\";\n\nexport function addSection(sectionCrn: number): SectionActionTypes {\n  return { type: ADD_SECTION, payload: sectionCrn };\n}\n\nexport function removeSection(sectionCrn: number): SectionActionTypes {\n  return { type: REMOVE_SECTION, payload: sectionCrn };\n}\n\nexport function addCourse(course: Course): CourseActionTypes {\n  return { type: ADD_COURSE, payload: course };\n}\n\nexport function removeCourse(\n  dept: string,\n  course_num: string\n): CourseActionTypes {\n  return { type: REMOVE_COURSE, payload: { dept, course_num } };\n}\n\nexport function addSchedule(response: ScheduleResponse): ScheduleActionTypes {\n  return {\n    type: ADD_SCHEDULE,\n    payload: {\n      name: response.name,\n      id: response.id,\n      term_code: response.term_code,\n      selectedCrns: new Set<number>(),\n      courses: {}\n    }\n  };\n}\n\nexport function removeSchedule(name: string): ScheduleActionTypes {\n  return { type: REMOVE_SCHEDULE, payload: name };\n}\n\nexport function selectSchedule(name: string): ScheduleActionTypes {\n  return { type: SELECT_SCHEDULE, payload: name };\n}\n\nexport function loadSchedules(schedules: Array<any>): ScheduleActionTypes {\n  return { type: LOAD_SCHEDULES, payload: schedules };\n}\n","import React, { ChangeEvent } from \"react\";\nimport TextField, { HelperText, Input } from \"@material/react-text-field\";\nimport List, { ListItem, ListItemText } from \"@material/react-list\";\nimport MaterialIcon from \"@material/react-material-icon\";\nimport { debounce } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { getCookie } from \"../utils\";\nimport { addCourse } from \"../redux/actions\";\nimport { SchedulesState } from \"../redux/types\";\n\ninterface AddCourseContentProps {\n  currScheduleId: number;\n  addCourse?: any;\n  closeDialog?: any;\n}\n\nclass AddCourseContent extends React.Component<AddCourseContentProps> {\n  state = { value: \"\", results: [] };\n\n  constructor(props: AddCourseContentProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.dialogClosing = this.dialogClosing.bind(this);\n    this.search = debounce(this.search, 300).bind(this);\n    this.resultSelected = this.resultSelected.bind(this);\n  }\n\n  resultSelected(selectedIndex: number) {\n    const { dept, course_num } = this.state.results[selectedIndex];\n    const body = {\n      course_id: `${dept}-${course_num}`\n    };\n    const csrftoken = getCookie(\"csrftoken\") as string;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": csrftoken\n    };\n    const that = this;\n    fetch(`/api/schedules/${this.props.currScheduleId}/courses`, {\n      method: \"PATCH\",\n      mode: \"same-origin\",\n      headers,\n      body: JSON.stringify(body)\n    })\n      .then((response: Response) => response.json())\n      .then((json: JSON) => that.props.addCourse(json));\n    this.dialogClosing();\n  }\n\n  search() {\n    const that = this;\n    fetch(`/api/data/search?q=${this.state.value}`)\n      .then(response => response.json())\n      .then(json => that.setState({ results: json }));\n  }\n\n  handleChange(e: any) {\n    this.setState({ value: e.currentTarget.value });\n    this.search();\n  }\n\n  dialogClosing() {\n    this.setState({ results: [], value: \"\" });\n    this.props.closeDialog();\n  }\n  render() {\n    return (\n      <div>\n        <TextField\n          helperText={<HelperText>Search</HelperText>}\n          trailingIcon={<MaterialIcon role=\"button\" icon=\"search\" />}\n        >\n          <Input value={this.state.value} onChange={this.handleChange} />\n        </TextField>\n        <List\n          className=\"course-results-list\"\n          handleSelect={this.resultSelected}\n        >\n          {this.state.results.map(({ name, dept, course_num }, i) => (\n            <ListItem key={i}>\n              <ListItemText primaryText={`${dept}-${course_num}: ${name}`} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => {\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      return {\n        currScheduleId: schedule.id\n      };\n    }\n  }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addCourse: (json: any) => dispatch(addCourse(json))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddCourseContent);\n","import React from \"react\";\n\nimport TextField, { Input } from \"@material/react-text-field\";\nimport MaterialIcon from \"@material/react-material-icon\";\nimport Select from \"@material/react-select\";\nimport { getCookie } from \"../utils\";\nimport { connect } from \"react-redux\";\nimport { addSchedule, selectSchedule } from \"../redux/actions\";\n\nconst termCodeToString = termCode => {\n  const termCodeStr = termCode.toString();\n  const year = termCodeStr.substr(0, 4);\n\n  let semester = termCodeStr[4];\n  if (semester === \"1\") {\n    semester = \"Spring\";\n  } else if (semester === \"2\") {\n    semester = \"Summer\";\n  } else if (semester === \"3\") {\n    semester = \"Fall\";\n  }\n\n  let campus = termCodeStr[5];\n  if (campus === \"1\") {\n    campus = \"College Station\";\n  } else if (campus === \"2\") {\n    campus = \"Galveston\";\n  } else if (campus === \"3\") {\n    campus = \"Qatar\";\n  } else if (campus === \"5\") {\n    campus = \"Half Year Term\";\n  }\n\n  return semester + \" \" + year + \" - \" + campus;\n};\n\nclass AddScheduleContent extends React.Component {\n  state = { value: \"\", terms: [], activeTerm: null };\n  constructor(props) {\n    super(props);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.submitScheduleName = this.submitScheduleName.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  componentDidMount() {\n    const that = this;\n    fetch(\"/api/data/terms\")\n      .then(response => response.json())\n      .then(json => {\n        let active = null;\n        if (json.length > 0) {\n          active = json[0];\n        }\n        that.setState({ terms: json, activeTerm: active });\n      });\n    // that.setState({ terms: DUMMY_TERMS, activeTerm: 0 });\n  }\n\n  handleValueChange(e) {\n    this.setState({ value: e.currentTarget.value });\n  }\n\n  submitScheduleName() {\n    console.log(this.state.value);\n    console.log(this.state.activeTerm);\n    if (this.state.activeTerm === undefined || this.state.activeTerm === null) {\n      return;\n    }\n    const body = {\n      name: this.state.value,\n      term_code: this.state.activeTerm\n    };\n    console.log(body);\n    const csrftoken = getCookie(\"csrftoken\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"X-CSRFToken\": csrftoken\n    };\n    const that = this;\n    fetch(`/api/schedules/`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    })\n      .then(response => response.json())\n      .then(json => {\n        that.props.addSchedule(json);\n      });\n    this.setState({ value: \"\" });\n\n    this.props.closeDialog();\n  }\n\n  handleTermChange(e) {\n    this.setState({ activeTerm: e.target.value });\n  }\n\n  render() {\n    const options = this.state.terms.map((term, i) => (\n      <option key={i} value={term}>\n        {termCodeToString(term)}\n      </option>\n    ));\n    return (\n      <div style={{ width: \"100%\" }}>\n        <TextField\n          label=\"Schedule Name\"\n          style={{ width: \"100%\" }}\n          trailingIcon={<MaterialIcon role=\"button\" icon=\"arrow_forward\" />}\n          onTrailingIconSelect={this.submitScheduleName}\n        >\n          <Input value={this.state.value} onChange={this.handleValueChange} />\n        </TextField>\n        <div style={{ width: \"100%\" }}>\n          <Select onChange={this.handleTermChange}>{options}</Select>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSchedule: json => dispatch(addSchedule(json)),\n    selectSchedule: name => dispatch(selectSchedule(name))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddScheduleContent);\n","import React, { ComponentProps } from \"react\";\n\nimport Dialog, { DialogTitle, DialogContent } from \"@material/react-dialog\";\nimport TabBar from \"@material/react-tab-bar\";\nimport Tab from \"@material/react-tab\";\nimport AddCourseContent from \"./AddCourseContent\";\nimport AddScheduleContent from \"./AddScheduleContent\";\n\ninterface AddDialogProps {\n  open: boolean;\n  closeDialog: any;\n}\n\nexport default class AddDialog extends React.Component<AddDialogProps> {\n  state = { activeIndex: 0 };\n\n  handleActiveIndexUpdate = (activeIndex: number) => {\n    this.setState({ activeIndex });\n  };\n  render() {\n    const contents = [\n      <AddCourseContent closeDialog={this.props.closeDialog} />,\n      <AddScheduleContent closeDialog={this.props.closeDialog} />\n    ];\n    return (\n      <Dialog open={this.props.open}>\n        <DialogContent>\n          <div>\n            <TabBar\n              activeIndex={this.state.activeIndex}\n              handleActiveIndexUpdate={this.handleActiveIndexUpdate}\n            >\n              <Tab>\n                <span className=\"mdc-tab__text-label\">Course</span>\n              </Tab>\n              <Tab>\n                <span className=\"mdc-tab__text-label\">Schedule</span>\n              </Tab>\n            </TabBar>\n            {contents[this.state.activeIndex]}\n          </div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { ListItem, ListItemText, ListItemGraphic } from \"@material/react-list\";\nimport { Section, Schedule, SchedulesState } from \"../redux/types\";\nimport { Checkbox } from \"@material/react-checkbox\";\nimport { addSection, removeSection } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { getCookie } from \"../utils\";\n\nexport interface SectionListItemProps {\n  section: Section;\n  addSection?: any;\n  removeSection?: any;\n  selectedCrns?: Set<number>;\n  currScheduleId?: number;\n}\n\ninterface GradeDistributionProps {\n  historical_performance: { [key: string]: (number | null) };\n}\n\nconst LETTER_MAP: { [key: string]: string } = {\n  \"A\": \"#00BCD4\",\n  \"B\": \"#A5D6A7\",\n  \"C\": \"#FFEE58\",\n  \"D\": \"#E57373\",\n  \"F\": \"#90A4AE\",\n  \"Q\": \"#D1C4E9\",\n}\n\nconst GradeDistribution: React.FunctionComponent<\n  GradeDistributionProps\n> = props => {\n  const { historical_performance } = props;\n  if (historical_performance['A'] === null) {\n    return <div />;\n  } else {\n    const divs = [];\n    let sum = 0;\n    for (const letter in LETTER_MAP) {\n      const val = historical_performance[letter];\n      sum += val ? val : 0;\n    }\n    for (const letter in LETTER_MAP) {\n      const val = historical_performance[letter];\n      if (val) {\n        divs.push(<div key={letter} style={{\n          backgroundColor: LETTER_MAP[letter],\n          width: `${((val / sum) * 100 - 0.1).toFixed(2)}%`,\n          display: \"inline-block\",\n          border: \"1px solid white\",\n          boxSizing: \"border-box\",\n          height: 20\n        }}></div>)\n      }\n    }\n    return <div style={{ width: '40%', marginLeft: 'auto' }}>{divs}</div>;\n  }\n};\n\nclass SectionListItem extends React.Component<\n  SectionListItemProps\n  > {\n\n  constructor(props: SectionListItemProps) {\n    super(props);\n    this.checkboxClickHandler = this.checkboxClickHandler.bind(this);\n    this.isChecked = this.isChecked.bind(this);\n    this.checkboxClickHandler = this.checkboxClickHandler.bind(this);\n  }\n\n  isChecked(): boolean {\n    if (this.props.selectedCrns) {\n      return this.props.selectedCrns.has(this.props.section.crn);\n    }\n    return false;\n  }\n\n  checkboxClickHandler() {\n    const sectionId = `${this.props.section.crn}_${this.props.section.term_code}`;\n    const csrftoken = getCookie(\"csrftoken\") as string;\n    const headers = {\n      'Content-Type': 'application/json',\n      \"X-CSRFToken\": csrftoken\n    }\n    if (this.isChecked()) {\n      this.props.removeSection(this.props.section.crn);\n      fetch(`/api/schedules/${this.props.currScheduleId}/sections/${sectionId}`, { method: \"DELETE\", headers });\n    } else {\n      this.props.addSection(this.props.section.crn);\n\n      const body = {\n        section_id: sectionId\n      };\n\n      fetch(`/api/schedules/${this.props.currScheduleId}/sections`, { method: \"PATCH\", headers, body: JSON.stringify(body) });\n    }\n  }\n  render() {\n    const { section_num, instructor, historical_performance } = this.props.section;\n    return (\n      <ListItem>\n        <Checkbox initRipple={() => { }} checked={this.isChecked()} onChange={this.checkboxClickHandler} />\n        <ListItemText primaryText={section_num} secondaryText={instructor || \"TBA\"} />\n        <ListItemGraphic graphic={<GradeDistribution historical_performance={historical_performance} />} />\n      </ListItem>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addSection: (sectionCrn: number) => dispatch(addSection(sectionCrn)),\n    removeSection: (sectionCrn: number) => dispatch(removeSection(sectionCrn))\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => {\n  let selectedCrns = new Set<number>();\n  let currScheduleId = -1;\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      selectedCrns = schedule.selectedCrns;\n      currScheduleId = schedule.id;\n    }\n  }\n  return { selectedCrns, currScheduleId };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionListItem);","import React from \"react\";\nimport List, {\n  ListItem,\n  ListItemText,\n  ListItemMeta\n} from \"@material/react-list\";\nimport IconButton from \"@material/react-icon-button\";\nimport MaterialIcon from \"@material/react-material-icon\";\n\nimport Collapsible from \"react-collapsible\";\nimport ConnectedSectionListItem, { SectionListItemProps } from \"./SectionListItem\";\nimport { removeCourse } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { SchedulesState } from \"../redux/types\";\nimport { getCookie } from \"../utils\";\n\ninterface CourseListItemProps {\n  dept: string;\n  course_num: string;\n  name: string;\n  sections: Array<SectionListItemProps>;\n  removeCourse: any;\n  currScheduleId?: number;\n}\n\nclass CourseListItem extends React.Component<\n  CourseListItemProps\n  > {\n  state = { checked: false, indeterminate: false };\n\n  constructor(props: CourseListItemProps) {\n    super(props);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n  }\n\n  handleDeleteClick() {\n    this.props.removeCourse(this.props.dept, this.props.course_num);\n    const course_id = `${this.props.dept}-${this.props.course_num}`\n    const csrftoken = getCookie(\"csrftoken\") as string;\n    const headers = {\n      'Content-Type': 'application/json',\n      \"X-CSRFToken\": csrftoken\n    }\n    fetch(`/api/schedules/${this.props.currScheduleId}/courses/${course_id}`, { method: \"DELETE\", headers });\n  }\n  render() {\n    const triggerElem = (\n      <ListItem className=\"course-list-item\">\n        <ListItemText\n          primaryText={`${this.props.dept}-${this.props.course_num}`}\n          secondaryText={this.props.name}\n        />\n        <ListItemMeta\n          meta={\n            <IconButton onClick={this.handleDeleteClick}>\n              <MaterialIcon icon=\"delete\" />\n            </IconButton>\n          }\n        />\n      </ListItem>\n    );\n\n    return (\n      <Collapsible trigger={triggerElem} transitionTime={250}>\n        <List twoLine className=\"course-sections\">\n          {this.props.sections.map(({ section }, i) => {\n            return <ConnectedSectionListItem key={i} section={section} />;\n          })}\n        </List>\n      </Collapsible>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => {\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      return {\n        currScheduleId: schedule.id\n      }\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    removeCourse: (dept: string, course_num: string) => dispatch(removeCourse(dept, course_num))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseListItem);","import React from \"react\";\nimport List from \"@material/react-list\";\n\nimport CourseListItem from \"./CourseListItem\";\nimport { SchedulesState, Course, Section } from \"../redux/types\";\nimport { connect } from \"react-redux\";\n\ninterface CourseListProps {\n  courses: { [key: string]: Course }\n}\nclass CourseList extends React.Component<CourseListProps> {\n  render() {\n    let courseListItems: any[] = [];\n    for (const key in this.props.courses) {\n      const { dept, name, course_num, sections } = this.props.courses[key];\n      const sectionProps = sections.map((section) => ({ section }));\n      courseListItems.push(\n        <CourseListItem\n          key={`${dept}-${course_num}`}\n          name={name}\n          dept={dept}\n          course_num={course_num}\n          sections={sectionProps}\n        />\n      )\n    }\n    return (\n      <List twoLine avatarList>\n        {courseListItems}\n      </List>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => {\n  let courses: { [key: string]: Course } = {};\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      courses = {...schedule.courses};\n    }\n  }\n  return { courses };\n}\n\nexport default connect(mapStateToProps)(CourseList);","import React, { ChangeEvent, FormEvent } from \"react\";\nimport Select from \"@material/react-select\";\nimport { selectSchedule } from \"../redux/actions\";\nimport { SchedulesState } from \"../redux/types\";\nimport { connect } from \"react-redux\";\n\ninterface ScheduleSelectProps {\n  scheduleNames: string[];\n  currScheduleName: string | undefined;\n  selectSchedule: any;\n}\n\nclass ScheduleSelect extends React.Component<ScheduleSelectProps> {\n  constructor(props: ScheduleSelectProps) {\n    super(props);\n    this.handleSelectionChange = this.handleSelectionChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.currScheduleName) {\n      // HACK: Set choice to first schedule, probably bad UX, but can't really help it right now.\n      if (this.props.scheduleNames.length > 0) {\n        this.props.selectSchedule(this.props.scheduleNames[0]);\n      }\n    }\n  }\n\n  handleSelectionChange(evt: any) {\n    if (evt.target) {\n      this.props.selectSchedule(evt.target.value);\n    } else {\n      console.log(\"Event target is undefined?\");\n    }\n  }\n\n  render() {\n    if (this.props.scheduleNames.length === 0) {\n      return null;\n    } else {\n      return (\n        <Select\n          className=\"schedule-select\"\n          value={this.props.currScheduleName}\n          onChange={this.handleSelectionChange}\n          options={this.props.scheduleNames}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => ({\n  currScheduleName: state.currScheduleName\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    selectSchedule: (name: string) => dispatch(selectSchedule(name))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleSelect);\n","import React from \"react\";\nimport { Body1 } from \"@material/react-typography\";\n\ninterface MeetingBlockProps {\n  start: number;\n  duration: number;\n  displayText: string;\n}\n\nconst MeetingBlock: React.SFC<MeetingBlockProps> = (\n  props: MeetingBlockProps\n) => (\n    <div\n      style={{\n        position: \"absolute\",\n        top: props.start * 100 + \"%\",\n        height: props.duration * 100 + \"%\",\n        width: \"100%\",\n        borderRadius: 3,\n        background: \"red\",\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Body1>{props.displayText}</Body1>\n    </div >\n  );\n\nexport default MeetingBlock;\n","import React from \"react\";\nimport { Section, SchedulesState } from \"../redux/types\";\nimport MeetingBlock from \"./MeetingBlock\";\nimport { connect } from \"react-redux\";\nimport { Body1 } from \"@material/react-typography\";\n\ninterface WeekProps {\n  sections: Array<Section>;\n}\n\nconst stringifyTime = (minutesSinceMidnight: number): string => {\n  let minutes = minutesSinceMidnight % 1;\n  let hours = minutesSinceMidnight - minutes;\n  minutes *= 60;\n  minutes = Math.round(minutes);\n\n  if (hours > 24) {\n    var day = Math.floor(hours / 24);\n    hours %= 24;\n  }\n\n  let date = new Date();\n  date.setHours(hours);\n  date.setMinutes(minutes);\n  date.setSeconds(0);\n\n  const time = date.toTimeString().split(\" \")[0];\n  const [hh, mm, ss] = time.split(\":\")\n\n  return `${hh}:${mm}`;\n};\n\nconst Week: React.SFC<WeekProps> = (props: WeekProps) => {\n  const weekdays = [\n    [\"Monday\", \"M\"],\n    [\"Tuesday\", \"T\"],\n    [\"Wednesday\", \"W\"],\n    [\"Thursday\", \"R\"],\n    [\"Friday\", \"F\"]\n  ];\n  const meetingsMap: { [key: string]: Array<React.ReactElement> } = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: []\n  };\n  const END_TIME = 21; // 9pm\n  const START_TIME = 7; // 7am\n  const dayLength = END_TIME - START_TIME + 1;\n\n  for (const section of props.sections) {\n    for (const meeting of section.meetings) {\n      if (meeting.start_time && meeting.end_time && meeting.meeting_days) {\n        const start = (meeting.start_time - START_TIME * 60) / (dayLength * 60);\n        const end = (meeting.end_time - START_TIME * 60) / (dayLength * 60);\n        const duration = end - start;\n        const displayText = `${section.dept}-${section.course_num}-${\n          section.section_num\n          }`;\n        for (const day of meeting.meeting_days) {\n          meetingsMap[day].push(\n            <MeetingBlock\n              key={Math.random() * Number.MAX_SAFE_INTEGER}\n              start={start}\n              duration={duration}\n              displayText={displayText}\n            />\n          );\n        }\n      }\n    }\n  }\n\n  const days = [];\n  for (const [day, abbrev] of weekdays) {\n    days.push(\n      <div className=\"day\" key={abbrev}>\n        <strong className=\"week-heading\">\n          <Body1>{day}</Body1>\n        </strong>\n        {meetingsMap[abbrev]}\n      </div>\n    );\n  }\n\n  const rows = [];\n  for (let i = 0; i <= dayLength; ++i) {\n    rows.push(\n      <tr className=\"week-row\" key={i}>\n        <td\n          style={{\n            width: \"20px\",\n            height: i ? \"auto\" : \"24px\",\n            color: \"grey\",\n            textAlign: \"left\",\n            padding: \"3px 10px 0 0\",\n            paddingLeft: 10,\n            borderBottom: \"1px solid \" + \"grey\",\n            verticalAlign: \"top\"\n          }}\n        >\n          <Body1>{i ? stringifyTime(i + 7 - 1) : \"\"}</Body1>\n        </td>\n        <td\n          style={{\n            borderBottom: \"1px solid grey\",\n            boxSizing: \"border-box\"\n          }}\n        />\n      </tr>\n    );\n  }\n  return (\n    <div>\n      <div className=\"week-wrap\">\n        <div className=\"week-container\">\n          <table className=\"week-grid\">\n            <tbody>{rows}</tbody>\n          </table>\n          <div className=\"days\">{days}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: SchedulesState) => {\n  const sections: Array<Section> = [];\n  if (state.currScheduleName) {\n    const schedule = state.schedules.get(state.currScheduleName);\n    if (schedule) {\n      schedule.selectedCrns.forEach(crn => {\n        for (const key in schedule.courses) {\n          for (const section of schedule.courses[key].sections) {\n            if (section.crn === crn) {\n              sections.push(section);\n            }\n            if (sections.length === schedule.selectedCrns.size) {\n              return { sections };\n            }\n          }\n        }\n      });\n    }\n  }\n  return {\n    sections\n  };\n};\n\nexport default connect(mapStateToProps)(Week);\n","import React, { Component } from \"react\";\nimport Drawer, {\n  DrawerAppContent,\n  DrawerHeader,\n  DrawerContent\n} from \"@material/react-drawer\";\nimport AddDialog from \"./components/AddDialog\";\nimport CourseList from \"./components/CourseList\";\nimport Fab from \"@material/react-fab\";\n\nimport MaterialIcon from \"@material/react-material-icon\";\nimport ScheduleSelect from \"./components/ScheduleSelect\";\nimport { SchedulesState, Schedule } from \"./redux/types\";\nimport { connect } from \"react-redux\";\nimport { loadSchedules } from \"./redux/actions\";\nimport Week from \"./components/Week\";\n\ninterface AppProps {\n  anySchedulesCreated: boolean;\n  schedules: Map<string, Schedule>;\n  currScheduleName: string;\n  loadSchedules: any;\n}\n\nclass App extends Component<AppProps> {\n  state = { dialogOpen: false };\n\n  constructor(props: any) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/api/schedules/\")\n      .then(response => response.json())\n      .then(json => {\n        this.props.loadSchedules(json);\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleClick() {\n    this.setState({ dialogOpen: !this.state.dialogOpen });\n  }\n\n  handleLogout() {\n    window.location.href = \"/auth/logout\";\n  }\n\n  render() {\n    const { schedules } = this.props;\n\n    let scheduleHeader = null;\n    if (this.props.anySchedulesCreated) {\n      scheduleHeader = (\n        <ScheduleSelect scheduleNames={Array.from(schedules.keys())} />\n      );\n    }\n    return (\n      <div className=\"drawer-container\">\n        <Drawer className=\"drawer\">\n          <DrawerHeader>{scheduleHeader}</DrawerHeader>\n\n          <DrawerContent className=\"drawer-content\">\n            <CourseList />\n          </DrawerContent>\n        </Drawer>\n        <DrawerAppContent className=\"drawer-app-content\">\n          <div className=\"week\">\n            <Week />\n          </div>\n          <Fab\n            className=\"fab\"\n            icon={<MaterialIcon icon=\"add\" />}\n            onClick={this.handleClick}\n          />\n          <Fab\n            mini\n            className=\"logout\"\n            icon={<MaterialIcon icon=\"exit_to_app\" />}\n            onClick={this.handleLogout}\n          />\n        </DrawerAppContent>\n        <AddDialog\n          open={this.state.dialogOpen}\n          closeDialog={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => ({\n  anySchedulesCreated: Array.from(state.schedules.keys()).length !== 0,\n  schedules: state.schedules,\n  currScheduleName: state.currScheduleName\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    loadSchedules: (schedules: Array<any>) => dispatch(loadSchedules(schedules))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SchedulesState,\n  Schedule,\n  ActionTypes,\n  ADD_SECTION,\n  REMOVE_SECTION,\n  ADD_COURSE,\n  REMOVE_COURSE,\n  ADD_SCHEDULE,\n  REMOVE_SCHEDULE,\n  SELECT_SCHEDULE,\n  LOAD_SCHEDULES\n} from \"./types\";\n\nconst initialState: SchedulesState = {\n  schedules: new Map<string, Schedule>(),\n  currScheduleName: undefined\n};\n\nconst timeStringToMinSinceMidnight = (timeString: string): number => {\n  const [hour, minute, second] = timeString\n    .split(\":\")\n    .map(chunk => Number.parseInt(chunk));\n  return hour * 60 + minute + second / 60;\n};\n\nexport function reducer(\n  state = initialState,\n  action: ActionTypes\n): SchedulesState {\n  let newState = { ...state };\n  const { currScheduleName } = newState;\n  if (action.type === SELECT_SCHEDULE) {\n    newState.currScheduleName = action.payload;\n  }\n  if (action.type === ADD_SCHEDULE) {\n    newState.schedules.set(action.payload.name, action.payload);\n    newState.currScheduleName = action.payload.name;\n  }\n  if (currScheduleName) {\n    const schedule = newState.schedules.get(currScheduleName);\n    if (schedule) {\n      switch (action.type) {\n        case ADD_SECTION:\n          schedule.selectedCrns.add(action.payload);\n          break;\n        case REMOVE_SECTION:\n          schedule.selectedCrns.delete(action.payload);\n          break;\n        case ADD_COURSE:\n          const course: any = action.payload;\n          for (let section of course.sections) {\n            for (let meeting of section.meetings) {\n              if (meeting.start_time) {\n                meeting.start_time = timeStringToMinSinceMidnight(\n                  meeting.start_time\n                );\n              }\n              if (meeting.end_time) {\n                meeting.end_time = timeStringToMinSinceMidnight(\n                  meeting.end_time\n                );\n              }\n            }\n          }\n          schedule.courses[\n            `${action.payload.dept}-${action.payload.course_num}`\n          ] = course;\n          break;\n        case REMOVE_COURSE:\n          const { dept, course_num } = action.payload;\n          delete schedule.courses[`${dept}-${course_num}`];\n          newState.schedules.set(currScheduleName, schedule);\n          break;\n        case REMOVE_SCHEDULE:\n          newState.schedules.delete(action.payload);\n          break;\n      }\n    }\n  } else {\n    if (action.type === LOAD_SCHEDULES) {\n      for (let scheduleName in action.payload) {\n        let schedule = action.payload[scheduleName];\n        for (let courseName in schedule.courses) {\n          const course = schedule.courses[courseName];\n          for (let section of course.sections) {\n            for (let meeting of section.meetings) {\n              if (meeting.start_time) {\n                meeting.start_time = timeStringToMinSinceMidnight(\n                  meeting.start_time\n                );\n              }\n              if (meeting.end_time) {\n                meeting.end_time = timeStringToMinSinceMidnight(\n                  meeting.end_time\n                );\n              }\n            }\n          }\n        }\n        schedule.selectedCrns = new Set<number>(\n          schedule.sections.map((section: string) =>\n            Number.parseInt(section.split(\"_\")[0])\n          )\n        );\n        delete schedule.sections;\n        newState.schedules.set(scheduleName, schedule);\n      }\n    }\n  }\n  console.log(newState);\n  return newState;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer } from \"./redux/reducers\";\n\nimport \"@material/react-drawer/dist/drawer.min.css\";\nimport \"@material/react-checkbox/dist/checkbox.min.css\";\nimport \"@material/react-list/dist/list.min.css\";\nimport \"@material/react-icon-button/dist/icon-button.min.css\";\nimport \"@material/react-material-icon/dist/material-icon.min.css\";\nimport \"@material/react-fab/dist/fab.min.css\";\nimport \"@material/react-dialog/dist/dialog.min.css\";\nimport \"@material/react-button/dist/button.min.css\";\nimport \"@material/react-select/dist/select.min.css\";\nimport \"@material/react-typography/dist/typography.min.css\";\nimport \"@material/react-text-field/dist/text-field.min.css\";\nimport \"@material/react-menu-surface/dist/menu-surface.min.css\";\nimport \"@material/react-tab-bar/dist/tab-bar.min.css\";\nimport \"@material/react-tab-scroller/dist/tab-scroller.min.css\";\nimport \"@material/react-tab/dist/tab.min.css\";\nimport \"@material/react-tab-indicator/dist/tab-indicator.min.css\";\n\nimport \"./App.scss\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}