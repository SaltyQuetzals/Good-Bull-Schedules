{"version":3,"sources":["components/AddCourseDialog.jsx","components/AddScheduleDialog.jsx","components/SectionListItem.tsx","components/CourseListItem.tsx","components/CourseList.tsx","redux/types.ts","components/ScheduleSelect.tsx","App.tsx","redux/actions.ts","serviceWorker.js","redux/reducers.ts","index.tsx"],"names":["AddCourseDialog","react_default","a","createElement","react_dialog_dist_default","open","this","props","react_dialog_dist","action","isDefault","Component","AddScheduleDialog","LETTER_MAP","letter","color","GradeDistribution","ABCDFQ","console","log","style","marginLeft","width","map","percentage","index","key","backgroundColor","concat","toFixed","display","border","boxSizing","height","SectionListItem","_this$props$section","section","section_num","instructor","react_list_dist","react_checkbox_dist","initRipple","primaryText","secondaryText","graphic","SectionListItem_GradeDistribution","React","CourseListItem","state","checked","indeterminate","triggerElem","className","dept","course_num","name","meta","react_icon_button_dist_default","react_material_icon_dist_default","icon","Collapsible_default","trigger","transitionTime","react_list_dist_default","twoLine","sections","_ref","i","SectionListItem_SectionListItem","CourseList","avatarList","courses","courseProps","CourseListItem_CourseListItem","ADD_SECTION","REMOVE_SECTION","ADD_COURSE","REMOVE_COURSE","ADD_SCHEDULE","REMOVE_SCHEDULE","SELECT_SCHEDULE","LOAD_SCHEDULES","ScheduleSelect","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelectionChange","bind","assertThisInitialized","evt","target","value","scheduleNames","length","react_select_dist_default","label","currentSchedule","undefined","onChange","options","connect","Array","from","schedules","keys","App","addCourseDialogIsOpen","addScheduleDialogIsOpen","handleClick","_this2","fetch","then","response","json","loadSchedules","e","anySchedulesCreated","setState","push","term_code","crn","meetings","min_credits","max_credits","courseListProps","dist_default","dist","components_ScheduleSelect","CourseList_CourseList","react_fab_dist_default","onClick","AddScheduleDialog_AddScheduleDialog","AddCourseDialog_AddCourseDialog","dispatch","type","payload","Boolean","window","location","hostname","match","initialState","Map","store","createStore","arguments","schedule","get","selectedCrns","add","delete","Error","newSchedule","Set","set","scheduleName","Number","parseInt","split","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yQAQqBA,mLAEjB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,KAAMC,KAAKC,MAAMF,MACvBJ,EAAAC,EAAAC,cAACK,EAAA,YAAD,mBACAP,EAAAC,EAAAC,cAACK,EAAA,cAAD,MACAP,EAAAC,EAAAC,cAACK,EAAA,aAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,aAAD,CAAcC,OAAO,WAArB,WACAR,EAAAC,EAAAC,cAACK,EAAA,aAAD,CAAcC,OAAO,SAASC,WAAS,GAAvC,mBARmCC,aCAxBC,mLAEjB,OACEX,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,KAAMC,KAAKC,MAAMF,MACvBJ,EAAAC,EAAAC,cAACK,EAAA,YAAD,qBACAP,EAAAC,EAAAC,cAACK,EAAA,cAAD,MACAP,EAAAC,EAAAC,cAACK,EAAA,aAAD,KACEP,EAAAC,EAAAC,cAACK,EAAA,aAAD,CAAcC,OAAO,WAArB,WACAR,EAAAC,EAAAC,cAACK,EAAA,aAAD,CAAcC,OAAO,SAASC,WAAS,GAAvC,mBARqCC,wFCKzCE,EAAa,CACjB,CAAEC,OAAQ,IAAKC,MAAO,WACtB,CAAED,OAAQ,IAAKC,MAAO,WACtB,CAAED,OAAQ,IAAKC,MAAO,WACtB,CAAED,OAAQ,IAAKC,MAAO,WACtB,CAAED,OAAQ,IAAKC,MAAO,WACtB,CAAED,OAAQ,IAAKC,MAAO,YAGlBC,EAEF,SAAAT,GAAS,IACHU,EAAWV,EAAXU,OAER,OADAC,QAAQC,IAAIF,GACG,OAAXA,EACK,KAGLhB,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAEC,WAAY,OAAQC,MAAO,QACtCL,EAAOM,IAAI,SAASC,EAAYC,GAC/B,OAAmB,IAAfD,EACK,KAGLvB,EAAAC,EAAAC,cAAA,OACEuB,IAAKD,EACLL,MAAO,CACLO,gBAAiBd,EAAWY,GAAOV,MACnCO,MAAK,GAAAM,QAAMJ,EAAa,IAAKK,QAAQ,GAAhC,KACLC,QAAS,eACTC,OAAQ,kBACRC,UAAW,aACXC,OAAQ,UAWLC,mLAGV,IAAAC,EACqC7B,KAAKC,MAAM6B,QAA/CC,EADDF,EACCE,YAAaC,EADdH,EACcG,WAAYrB,EAD1BkB,EAC0BlB,OACjC,OACEhB,EAAAC,EAAAC,cAACoC,EAAA,SAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,SAAD,CAAUC,WAAY,eACtBxC,EAAAC,EAAAC,cAACoC,EAAA,aAAD,CAAcG,YAAaL,EAAaM,cAAeL,IACvDrC,EAAAC,EAAAC,cAACoC,EAAA,gBAAD,CAAiBK,QAAS3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAmB5B,OAAQA,cAThB6B,IAAMnC,WCrC9BoC,6MAGnBC,MAAQ,CAAEC,SAAS,EAAOC,eAAe,2EAEvC,IAAMC,EACJlD,EAAAC,EAAAC,cAACoC,EAAA,SAAD,CAAUa,UAAU,oBAClBnD,EAAAC,EAAAC,cAACoC,EAAA,aAAD,CACEG,YAAW,GAAAd,OAAKtB,KAAKC,MAAM8C,KAAhB,KAAAzB,OAAwBtB,KAAKC,MAAM+C,YAC9CX,cAAerC,KAAKC,MAAMgD,OAE5BtD,EAAAC,EAAAC,cAACoC,EAAA,aAAD,CACEiB,KACEvD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACED,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAcyD,KAAK,eAO7B,OACE1D,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAa2D,QAASV,EAAaW,eAAgB,KACjD7D,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,CAAM8D,SAAO,EAACZ,UAAU,mBACrB9C,KAAKC,MAAM0D,SAAS1C,IAAI,SAAA2C,EAAcC,GAAM,IAAjB/B,EAAiB8B,EAAjB9B,QAC1B,OAAOnC,EAAAC,EAAAC,cAACiE,EAAD,CAAiB1C,IAAKyC,EAAG/B,QAASA,eAzBTU,IAAMnC,WCX7B0D,mLAEjB,OACEpE,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,CAAM8D,SAAO,EAACM,YAAU,GACrBhE,KAAKC,MAAMgE,QAAQhD,IAAI,SAACiD,EAAaL,GAAM,IAClCd,EAAqCmB,EAArCnB,KAAME,EAA+BiB,EAA/BjB,KAAMD,EAAyBkB,EAAzBlB,WAAYW,EAAaO,EAAbP,SAChC,OACEhE,EAAAC,EAAAC,cAACsE,EAAD,CACE/C,IAAKyC,EACLd,KAAMA,EACNE,KAAMA,EACND,WAAYA,EACZW,SAAUA,cAZgBnB,IAAMnC,6CCRjC+D,EAAc,cACdC,EAAiB,iBACjBC,EAAa,aACbC,EAAgB,gBAChBC,EAAe,eACfC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAiB,6BCIxBC,cACJ,SAAAA,EAAY3E,GAA4B,IAAA4E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9E,KAAA4E,IACtCC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9E,KAAA8E,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlF,KAAMC,KACDkF,sBAAsBC,KAA3BN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAFsCA,qFAKlBS,GAChBA,EAAIC,QACSD,EAAIC,OAAOC,uCAK5B,OAAwC,IAApCxF,KAAKC,MAAMwF,cAAcC,OACpB,KAGL/F,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CACEgG,MAAM,kBACN9C,UAAU,kBACV0C,MAAOxF,KAAKC,MAAM4F,sBAAmBC,EACrCC,SAAU/F,KAAKmF,sBACfa,QAAShG,KAAKC,MAAMwF,uBAtBDjD,IAAMnC,WAkCpB4F,cALS,SAACvD,GAAD,MAA4B,CAClD+C,cAAeS,MAAMC,KAAKzD,EAAM0D,UAAUC,QAC1CR,gBAAiBnD,EAAMmD,kBAGVI,CAAyBrB,GCvBlC0B,cAGJ,SAAAA,EAAYrG,GAAY,IAAA4E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9E,KAAAsG,IACtBzB,EAAAC,OAAAE,EAAA,EAAAF,CAAA9E,KAAA8E,OAAAG,EAAA,EAAAH,CAAAwB,GAAApB,KAAAlF,KAAMC,KAHRyC,MAAQ,CAAE6D,uBAAuB,EAAOC,yBAAyB,GAI/D3B,EAAK4B,YAAc5B,EAAK4B,YAAYrB,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAFGA,mFAKJ,IAAA6B,EAAA1G,KAClB2G,MAAM,mBACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GACJlG,QAAQC,IAAI,gBACZ6F,EAAKzG,MAAM8G,cAAcD,yCAInBE,GACNhH,KAAKC,MAAMgH,oBACbjH,KAAKkH,SAAS,CAAEX,uBAAuB,IAEvCvG,KAAKkH,SAAS,CAAEV,yBAAyB,qCAI3C,IAAM7C,EAAW,GACjBA,EAASwD,KAAK,CACZrF,QAAS,CACPiB,KAAM,OACNC,WAAY,MACZjB,YAAa,MACbkB,KAAM,cACNmE,UAAW,OACXC,IAAK,OACLC,SAAU,GACV3G,OAAQ,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,IAC3B4G,YAAa,EACbC,YAAa,EACbxF,WAAY,YAGhB,IAAMyF,EAAmC,CACvCxD,QAAS,CACP,CACElB,KAAM,OACNC,WAAY,MACZC,KAAM,8CACNU,YAEF,CACEZ,KAAM,OACNC,WAAY,MACZC,KAAM,oCACNU,cAIN,OACEhE,EAAAC,EAAAC,cAAA,OAAKiD,UAAU,oBACbnD,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,CAAQkD,UAAU,UAChBnD,EAAAC,EAAAC,cAAC8H,EAAA,aAAD,KACEhI,EAAAC,EAAAC,cAAC+H,EAAD,OAGFjI,EAAAC,EAAAC,cAAC8H,EAAA,cAAD,CAAe7E,UAAU,kBACvBnD,EAAAC,EAAAC,cAACgI,EAAD,CAAY5D,QAASwD,EAAgBxD,YAGzCtE,EAAAC,EAAAC,cAAC8H,EAAA,iBAAD,CAAkB7E,UAAU,sBAC1BnD,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CACEkD,UAAU,MACVO,KAAM1D,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAcyD,KAAK,QACzB0E,QAAS/H,KAAKyG,eAGlB9G,EAAAC,EAAAC,cAACmI,EAAD,CAAmBjI,KAAMC,KAAK0C,MAAM8D,0BACpC7G,EAAAC,EAAAC,cAACoI,EAAD,CAAiBlI,KAAMC,KAAK0C,MAAM6D,gCA5ExBlG,aA4FH4F,cAVS,SAACvD,GAAD,MAA4B,CAClDuE,oBAAmE,IAA9Cf,MAAMC,KAAKzD,EAAM0D,UAAUC,QAAQX,SAG/B,SAACwC,GAC1B,MAAO,CACLnB,cAAe,SAACX,GAAD,OAA2B8B,EC/DvC,SAAuB9B,GAC5B,MAAO,CAAE+B,KAAMxD,EAAgByD,QAAShC,GD8DaW,CAAcX,OAItDH,CAGbK,GEzGkB+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECLAC,EAA+B,CACnCtC,UAAW,IAAIuC,IACf9C,gBAAiB,sECKb+C,EAAQC,YDFP,WAGW,IAFhBnG,EAEgBoG,UAAApD,OAAA,QAAAI,IAAAgD,UAAA,GAAAA,UAAA,GAFRJ,EACRvI,EACgB2I,UAAApD,OAAA,EAAAoD,UAAA,QAAAhD,EACRD,EAAoBnD,EAApBmD,gBAER,GADAjF,QAAQC,IAAIV,EAAOgI,MACK,OAApBtC,EAA0B,CAC5B,IAAMkD,EAAWrG,EAAM0D,UAAU4C,IAAInD,GACrC,GAAIkD,EACF,OAAQ5I,EAAOgI,MACb,KAAK/D,EACH2E,EAASE,aAAaC,IAAI/I,EAAOiI,SACjC,MACF,KAAK/D,EACH0E,EAASE,aAAaE,OAAOhJ,EAAOiI,SACpC,MACF,KAAK9D,EAGL,KAAKC,EACHwE,EAAS9E,QAAQkD,KAAKhH,EAAOiI,SAC7B,MACF,KAAK3D,EACH/B,EAAM0D,UAAU+C,OAAOhJ,EAAOiI,aAG7B,CACL,GAAIjI,EAAOgI,OAAS3D,EASlB,MAAM4E,MAAM,0DARZ,IAAMC,EAAwB,CAC5BpG,KAAM9C,EAAOiI,QAAQnF,KACrBmE,UAAWjH,EAAOiI,QAAQhB,UAC1BnD,QAAS,GACTgF,aAAc,IAAIK,KAEpB5G,EAAM0D,UAAUmD,IAAIpJ,EAAOiI,QAAQnF,KAAMoG,SAO7C,GADAzI,QAAQC,IAAI,8CACRV,EAAOgI,OAASzD,EAClB9D,QAAQC,IAAI,uBACZ6B,EAAMmD,gBAAkB1F,EAAOiI,aAC1B,GAAIjI,EAAOgI,OAASxD,EAAgB,CACzC,IAAK,IAAI6E,KAAgBrJ,EAAOiI,QAAS,CACvC,IAAIW,EAAW5I,EAAOiI,QAAQoB,GAC9BT,EAASE,aAAeF,EAASpF,SAAS1C,IAAI,SAACa,GAAD,OAC5C2H,OAAOC,SAAS5H,EAAQ6H,MAAM,KAAK,aAE9BZ,EAASpF,SAChBjB,EAAM0D,UAAUmD,IAAIC,EAAwBT,GAE9CnI,QAAQC,IAAI6B,EAAM0D,gBAElBxF,QAAQC,IAAI,8CAA+CV,EAAOgI,MAGtE,OAAOzF,ICtDTkH,IAASC,OACPlK,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAUlB,MAAOA,GACfjJ,EAAAC,EAAAC,cAACkK,EAAD,OAEFC,SAASC,eAAe,SFuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,KAAK,SAAAyD,GACjCA,EAAaC","file":"static/js/main.cec07831.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Dialog, {\n  DialogTitle,\n  DialogContent,\n  DialogFooter,\n  DialogButton\n} from \"@material/react-dialog\";\n\nexport default class AddCourseDialog extends Component {\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle>Add Course</DialogTitle>\n        <DialogContent />\n        <DialogFooter>\n          <DialogButton action=\"dismiss\">Dismiss</DialogButton>\n          <DialogButton action=\"accept\" isDefault>\n            Accept\n          </DialogButton>\n        </DialogFooter>\n      </Dialog>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Dialog, {\n  DialogTitle,\n  DialogContent,\n  DialogFooter,\n  DialogButton\n} from \"@material/react-dialog\";\n\nexport default class AddScheduleDialog extends Component {\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle>Add Schedule</DialogTitle>\n        <DialogContent />\n        <DialogFooter>\n          <DialogButton action=\"dismiss\">Dismiss</DialogButton>\n          <DialogButton action=\"accept\" isDefault>\n            Accept\n          </DialogButton>\n        </DialogFooter>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { ListItem, ListItemText, ListItemGraphic } from \"@material/react-list\";\nimport { Section } from \"../redux/types\";\nimport { Checkbox } from \"@material/react-checkbox\";\n\nexport interface SectionListItemProps {\n  section: Section;\n}\n\ninterface GradeDistributionProps {\n  ABCDFQ: Array<number> | null;\n}\n\nconst LETTER_MAP = [\n  { letter: \"A\", color: \"#00BCD4\" },\n  { letter: \"B\", color: \"#A5D6A7\" },\n  { letter: \"C\", color: \"#FFEE58\" },\n  { letter: \"D\", color: \"#E57373\" },\n  { letter: \"F\", color: \"#90A4AE\" },\n  { letter: \"Q\", color: \"#D1C4E9\" }\n];\n\nconst GradeDistribution: React.FunctionComponent<\n  GradeDistributionProps\n> = props => {\n  const { ABCDFQ } = props;\n  console.log(ABCDFQ);\n  if (ABCDFQ === null) {\n    return null;\n  } else {\n    return (\n      <div style={{ marginLeft: \"auto\", width: \"40%\" }}>\n        {ABCDFQ.map(function(percentage, index) {\n          if (percentage === 0) {\n            return null;\n          } else {\n            return (\n              <div\n                key={index}\n                style={{\n                  backgroundColor: LETTER_MAP[index].color,\n                  width: `${(percentage - 0.1).toFixed(2)}%`,\n                  display: \"inline-block\",\n                  border: \"1px solid white\",\n                  boxSizing: \"border-box\",\n                  height: 20\n                }}\n              />\n            );\n          }\n        })}\n      </div>\n    );\n  }\n};\n\nexport default class SectionListItem extends React.Component<\n  SectionListItemProps\n> {\n  render() {\n    const { section_num, instructor, ABCDFQ } = this.props.section;\n    return (\n      <ListItem>\n        <Checkbox initRipple={() => {}} />\n        <ListItemText primaryText={section_num} secondaryText={instructor} />\n        <ListItemGraphic graphic={<GradeDistribution ABCDFQ={ABCDFQ} />} />\n      </ListItem>\n    );\n  }\n}\n","import React from \"react\";\nimport List, {\n  ListItem,\n  ListItemText,\n  ListItemMeta\n} from \"@material/react-list\";\nimport IconButton from \"@material/react-icon-button\";\nimport MaterialIcon from \"@material/react-material-icon\";\n\nimport Collapsible from \"react-collapsible\";\nimport SectionListItem, { SectionListItemProps } from \"./SectionListItem\";\n\nexport interface CourseListItemProps {\n  dept: string;\n  course_num: string;\n  name: string;\n  sections: Array<SectionListItemProps>;\n}\n\nexport default class CourseListItem extends React.Component<\n  CourseListItemProps\n> {\n  state = { checked: false, indeterminate: false };\n  render() {\n    const triggerElem = (\n      <ListItem className=\"course-list-item\">\n        <ListItemText\n          primaryText={`${this.props.dept}-${this.props.course_num}`}\n          secondaryText={this.props.name}\n        />\n        <ListItemMeta\n          meta={\n            <IconButton>\n              <MaterialIcon icon=\"delete\" />\n            </IconButton>\n          }\n        />\n      </ListItem>\n    );\n\n    return (\n      <Collapsible trigger={triggerElem} transitionTime={250}>\n        <List twoLine className=\"course-sections\">\n          {this.props.sections.map(({ section }, i) => {\n            return <SectionListItem key={i} section={section} />;\n          })}\n        </List>\n      </Collapsible>\n    );\n  }\n}\n","import React from \"react\";\nimport List from \"@material/react-list\";\n\nimport CourseListItem, { CourseListItemProps } from \"./CourseListItem\";\n\nexport interface CourseListProps {\n  courses: Array<CourseListItemProps>;\n}\nexport default class CourseList extends React.Component<CourseListProps> {\n  render() {\n    return (\n      <List twoLine avatarList>\n        {this.props.courses.map((courseProps, i) => {\n          const { dept, name, course_num, sections } = courseProps;\n          return (\n            <CourseListItem\n              key={i}\n              dept={dept}\n              name={name}\n              course_num={course_num}\n              sections={sections}\n            />\n          );\n        })}\n      </List>\n    );\n  }\n}\n","export const ADD_SECTION = \"ADD_SECTION\";\nexport const REMOVE_SECTION = \"REMOVE_SECTION\";\nexport const ADD_COURSE = \"ADD_COURSE\";\nexport const REMOVE_COURSE = \"REMOVE_COURSE\";\nexport const ADD_SCHEDULE = \"ADD_SCHEDULE\";\nexport const REMOVE_SCHEDULE = \"REMOVE_SCHEDULE\";\nexport const SELECT_SCHEDULE = \"SELECT_SCHEDULE\";\nexport const LOAD_SCHEDULES = \"LOAD_SCHEDULES\";\n\nexport interface Meeting {\n  location: string | null;\n  meeting_days: string | null;\n  start_time: Date | null;\n  end_time: Date | null;\n  meeting_type: string;\n}\n\nexport interface Section {\n  dept: string;\n  course_num: string;\n  section_num: string;\n  name: string;\n  term_code: number;\n  crn: number;\n  meetings: Array<Meeting>;\n  ABCDFQ: Array<number> | null;\n  min_credits: number | null;\n  max_credits: number | null;\n  instructor: string | null;\n}\n\nexport interface Course {\n  dept: string;\n  course_num: string;\n  name: string;\n  prerequisites: string | null;\n  corequisites: string | null;\n  min_credits: number | null;\n  max_credits: number | null;\n  description: string | null;\n  sections: Array<Section>;\n}\n\nexport interface Schedule {\n  name: string;\n  term_code: number;\n  courses: Array<Course>;\n  selectedCrns: Set<number>;\n}\n\nexport interface AddSectionAction {\n  type: typeof ADD_SECTION;\n  payload: number;\n}\n\nexport interface RemoveSectionAction {\n  type: typeof REMOVE_SECTION;\n  payload: number;\n}\n\nexport interface AddCourseAction {\n  type: typeof ADD_COURSE;\n  payload: Course;\n}\n\nexport interface RemoveCourseAction {\n  type: typeof REMOVE_COURSE;\n  payload: Course;\n}\n\nexport interface AddScheduleAction {\n  type: typeof ADD_SCHEDULE;\n  payload: {\n    name: string; // Schedule name\n    term_code: number;\n  };\n}\n\nexport interface RemoveScheduleAction {\n  type: typeof REMOVE_SCHEDULE;\n  payload: string; // Schedule name\n}\n\nexport interface SelectScheduleAction {\n  type: typeof SELECT_SCHEDULE;\n  payload: string;\n}\n\nexport interface LoadSchedulesAction {\n  type: typeof LOAD_SCHEDULES;\n  payload: Array<any>;\n}\n\nexport interface SchedulesState {\n  schedules: Map<string, Schedule>;\n  currentSchedule: string | null;\n}\n\nexport type SectionActionTypes = AddSectionAction | RemoveSectionAction;\nexport type CourseActionTypes = AddCourseAction | RemoveCourseAction;\nexport type ScheduleActionTypes =\n  | AddScheduleAction\n  | RemoveScheduleAction\n  | SelectScheduleAction\n  | LoadSchedulesAction;\n\nexport type ActionTypes =\n  | SectionActionTypes\n  | CourseActionTypes\n  | ScheduleActionTypes;\n","import React, { ChangeEvent, FormEvent } from \"react\";\nimport Select from \"@material/react-select\";\nimport { selectSchedule } from \"../redux/actions\";\nimport { SchedulesState } from \"../redux/types\";\nimport { connect } from \"react-redux\";\n\ninterface ScheduleSelectProps {\n  scheduleNames: string[];\n  currentSchedule: string | null;\n}\n\nclass ScheduleSelect extends React.Component<ScheduleSelectProps> {\n  constructor(props: ScheduleSelectProps) {\n    super(props);\n    this.handleSelectionChange.bind(this);\n  }\n\n  handleSelectionChange(evt: any) {\n    if (evt.target) {\n      selectSchedule(evt.target.value);\n    }\n  }\n\n  render() {\n    if (this.props.scheduleNames.length === 0) {\n      return null;\n    } else {\n      return (\n        <Select\n          label=\"Choose schedule\"\n          className=\"schedule-select\"\n          value={this.props.currentSchedule || undefined}\n          onChange={this.handleSelectionChange}\n          options={this.props.scheduleNames}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => ({\n  scheduleNames: Array.from(state.schedules.keys()),\n  currentSchedule: state.currentSchedule\n});\n\nexport default connect(mapStateToProps)(ScheduleSelect);\n","import React, { Component } from \"react\";\nimport Drawer, {\n  DrawerAppContent,\n  DrawerHeader,\n  DrawerContent\n} from \"@material/react-drawer\";\nimport AddCourseDialog from \"./components/AddCourseDialog\";\nimport AddScheduleDialog from \"./components/AddScheduleDialog\";\nimport CourseList, { CourseListProps } from \"./components/CourseList\";\nimport Fab from \"@material/react-fab\";\n\nimport MaterialIcon from \"@material/react-material-icon\";\nimport ScheduleSelect from \"./components/ScheduleSelect\";\nimport { SchedulesState, Schedule } from \"./redux/types\";\nimport { connect } from \"react-redux\";\nimport { loadSchedules } from \"./redux/actions\";\n\ninterface AppProps {\n  anySchedulesCreated: boolean;\n  loadSchedules: any;\n}\n\nclass App extends Component<AppProps> {\n  state = { addCourseDialogIsOpen: false, addScheduleDialogIsOpen: false };\n\n  constructor(props: any) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/api/schedules/\")\n      .then(response => response.json())\n      .then(json => {\n        console.log(\"Dispatching!\");\n        this.props.loadSchedules(json);\n      });\n  }\n\n  handleClick(e: any) {\n    if (this.props.anySchedulesCreated) {\n      this.setState({ addCourseDialogIsOpen: true });\n    } else {\n      this.setState({ addScheduleDialogIsOpen: true });\n    }\n  }\n  render() {\n    const sections = [];\n    sections.push({\n      section: {\n        dept: \"CSCE\",\n        course_num: \"470\",\n        section_num: \"501\",\n        name: \"INFO RETRVL\",\n        term_code: 201831,\n        crn: 123456,\n        meetings: [],\n        ABCDFQ: [50, 20, 10, 0, 0, 20],\n        min_credits: 0.0,\n        max_credits: 4.0,\n        instructor: \"Xia Hu\"\n      }\n    });\n    const courseListProps: CourseListProps = {\n      courses: [\n        {\n          dept: \"CSCE\",\n          course_num: \"121\",\n          name: \"Introduction to Program Design and Concepts\",\n          sections\n        },\n        {\n          dept: \"CSCE\",\n          course_num: \"470\",\n          name: \"Information Retrieval and Storage\",\n          sections\n        }\n      ]\n    };\n    return (\n      <div className=\"drawer-container\">\n        <Drawer className=\"drawer\">\n          <DrawerHeader>\n            <ScheduleSelect />\n          </DrawerHeader>\n\n          <DrawerContent className=\"drawer-content\">\n            <CourseList courses={courseListProps.courses} />\n          </DrawerContent>\n        </Drawer>\n        <DrawerAppContent className=\"drawer-app-content\">\n          <Fab\n            className=\"fab\"\n            icon={<MaterialIcon icon=\"add\" />}\n            onClick={this.handleClick}\n          />\n        </DrawerAppContent>\n        <AddScheduleDialog open={this.state.addScheduleDialogIsOpen} />\n        <AddCourseDialog open={this.state.addCourseDialogIsOpen} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: SchedulesState) => ({\n  anySchedulesCreated: Array.from(state.schedules.keys()).length !== 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    loadSchedules: (schedules: Array<any>) => dispatch(loadSchedules(schedules))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  SectionActionTypes,\n  ADD_SECTION,\n  REMOVE_SECTION,\n  Course,\n  CourseActionTypes,\n  ADD_COURSE,\n  REMOVE_COURSE,\n  ScheduleActionTypes,\n  Schedule,\n  ADD_SCHEDULE,\n  REMOVE_SCHEDULE,\n  SELECT_SCHEDULE,\n  LOAD_SCHEDULES\n} from \"./types\";\n\nexport function addSection(sectionCrn: number): SectionActionTypes {\n  return { type: ADD_SECTION, payload: sectionCrn };\n}\n\nexport function removeSection(sectionCrn: number): SectionActionTypes {\n  return { type: REMOVE_SECTION, payload: sectionCrn };\n}\n\nexport function addCourse(course: Course): CourseActionTypes {\n  return { type: ADD_COURSE, payload: course };\n}\n\nexport function removeCourse(course: Course): CourseActionTypes {\n  return { type: REMOVE_COURSE, payload: course };\n}\n\nexport function addSchedule(\n  name: string,\n  term_code: number\n): ScheduleActionTypes {\n  return { type: ADD_SCHEDULE, payload: { name, term_code } };\n}\n\nexport function removeSchedule(name: string): ScheduleActionTypes {\n  return { type: REMOVE_SCHEDULE, payload: name };\n}\n\nexport function selectSchedule(name: string): ScheduleActionTypes {\n  return { type: SELECT_SCHEDULE, payload: name };\n}\n\nexport function loadSchedules(schedules: Array<any>): ScheduleActionTypes {\n  return { type: LOAD_SCHEDULES, payload: schedules };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SchedulesState,\n  Schedule,\n  ActionTypes,\n  ADD_SECTION,\n  REMOVE_SECTION,\n  ADD_COURSE,\n  REMOVE_COURSE,\n  ADD_SCHEDULE,\n  REMOVE_SCHEDULE,\n  SELECT_SCHEDULE,\n  LOAD_SCHEDULES\n} from \"./types\";\nconst initialState: SchedulesState = {\n  schedules: new Map<string, Schedule>(),\n  currentSchedule: null\n};\n\nexport function reducer(\n  state = initialState,\n  action: ActionTypes\n): SchedulesState {\n  const { currentSchedule } = state;\n  console.log(action.type);\n  if (currentSchedule !== null) {\n    const schedule = state.schedules.get(currentSchedule);\n    if (schedule) {\n      switch (action.type) {\n        case ADD_SECTION:\n          schedule.selectedCrns.add(action.payload);\n          break;\n        case REMOVE_SECTION:\n          schedule.selectedCrns.delete(action.payload);\n          break;\n        case ADD_COURSE:\n          schedule.courses.push(action.payload);\n          break;\n        case REMOVE_COURSE:\n          schedule.courses.push(action.payload);\n          break;\n        case REMOVE_SCHEDULE:\n          state.schedules.delete(action.payload);\n          break;\n      }\n    } else {\n      if (action.type === ADD_SCHEDULE) {\n        const newSchedule: Schedule = {\n          name: action.payload.name,\n          term_code: action.payload.term_code,\n          courses: [],\n          selectedCrns: new Set<number>()\n        };\n        state.schedules.set(action.payload.name, newSchedule);\n      } else {\n        throw Error(\"The schedule attempting to be accessed does not exist.\");\n      }\n    }\n  } else {\n    console.log(\"The current schedule hasn't been selected.\");\n    if (action.type === SELECT_SCHEDULE) {\n      console.log(\"Selecting schedule!\");\n      state.currentSchedule = action.payload;\n    } else if (action.type === LOAD_SCHEDULES) {\n      for (let scheduleName in action.payload) {\n        let schedule = action.payload[scheduleName];\n        schedule.selectedCrns = schedule.sections.map((section: string) =>\n          Number.parseInt(section.split(\"_\")[0])\n        );\n        delete schedule.sections;\n        state.schedules.set(scheduleName as string, schedule);\n      }\n      console.log(state.schedules);\n    } else {\n      console.log(\"None of the available action types matched:\", action.type);\n    }\n  }\n  return state;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer } from \"./redux/reducers\";\n\nimport \"@material/react-drawer/dist/drawer.min.css\";\nimport \"@material/react-checkbox/dist/checkbox.min.css\";\nimport \"@material/react-list/dist/list.min.css\";\nimport \"@material/react-icon-button/dist/icon-button.min.css\";\nimport \"@material/react-material-icon/dist/material-icon.min.css\";\nimport \"@material/react-fab/dist/fab.min.css\";\nimport \"@material/react-dialog/dist/dialog.min.css\";\nimport \"@material/react-button/dist/button.min.css\";\nimport \"@material/react-select/dist/select.min.css\";\n\nimport \"./App.scss\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}